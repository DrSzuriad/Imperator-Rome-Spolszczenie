l_english:
 PLAYER_LEFT_NEW: "Player $NAME$ has left the game!"
 SHOULD_LOBOTOMIZE: "Should $COUNTRY$ play according to AI settings?"
 SHOULD_LOBOTOMIZE2: "Otherwise, the country will be in zombie mode."
 ZOMBIE: "Zombie"
 UNLOBOTOMIZE: "Play as AI"
 SM_LANGUAGE: "Language"
 ENGLISH_SUPPORTED: "Yes"
 SPANISH_SUPPORTED: "Yes"
 GERMAN_SUPPORTED: "Yes"
 FRENCH_SUPPORTED: "Yes"
 ENGLISH: "English"
 SPANISH: "Spanish"
 GERMAN: "German"
 FRENCH: "French"
 MAIN_MENU: "Main menu"
 NEW: "New"
 TUTORIAL: "Tutorial"
 CONTENT: "Content"
 LOAD_GAME: "Load Game"
 LOAD_INGAME_BUTTON_DISABLED: "It is not possible to load a save file in a multiplayer game"
 CLOUDSAVE_UNVAVAILABLE_TOOLTIP: "Cloud saves are not available"
 SAVE_GAME: "Save Game"
 SAVE: "Save"
 SAVE_ENABLE_CLOUDSAVE_TOOLTIP: "Save to cloud"
 DELETE: "Delete"
 LOAD_CLOUDSAVE_TOOLTIP: "Cloud Save"
 GAME_OPTIONS: "Game Options"
 HELP: "Help"
 RELOAD: "Reload"
 OPEN_SOURCE: "Open source file"
 CANCEL: "Cancel"
 LOBBY: "Lobby"
 START: "Start"
 FINISH: "Finish"
 DISABLED_BUTTON: "Not implemented..."
 BALANCE_INFO: "Balance: $VAL|+=$"
 ENVOY_TEXT: "Current Envoy"
 DATE: "Date: $DATE$"
 UNTIL_DATE: "until $DATE$"
 CURRENT_DATE: "[GetDateString]"
 CURRENT_DATE_TOOLTIP: "#T Current Date#!\nThe game date counts from the founding of Rome; Ab Urbe Condita. For those who prefer the Gregorian calendar, the current date is [GetChristianDateString|Y].[GetPlayerDatesString]\n\n#TF Pythagoras, when he was asked what time was, answered that it was the soul of this world.#!"
 DATE_TODAY: "This is Today"
 DATE_YEARS_MONTHS_DAYS_PAST: "This was $YEARS$ years $MONTHS$ months $DAYS$ days ago."
 DATE_YEARS_MONTHS_DAYS_FUTURE: "This is in $YEARS$ years $MONTHS$ months $DAYS$ days."
 DATE_MONTHS_DAYS_PAST: "This was $MONTHS$ months $DAYS$ days ago."
 DATE_MONTHS_DAYS_FUTURE: "This is in $MONTHS$ months $DAYS$ days."
 DATE_DAYS_PAST: "This was $DAYS$ days ago."
 DATE_DAYS_FUTURE: "This is in $DAYS$ days."
 DATE_TOOLTIP: "[Date.GetTimeUntil]\nIn the Gregorian calendar, this is [Date.GetLongChristian]."
 CHANGE_GAME_SPEED_HOST: "#T Time Control#!\n@trigger_no!Only the host can change game speed!"
 INCREASE_GAME_SPEED: "[GetCanIncreaseGameSpeedString]"
 DECREASE_GAME_SPEED: "[GetCanDecreaseGameSpeedString]"
 DECREASE_GAME_SPEED_TXT: "#T Decrease Speed#!\n#I Click to decrease the gamespeed.#!"
 INCREASE_GAME_SPEED_TXT: "#T Increase Speed#!\n#I Click to increase the gamespeed.#!"
 PROVINCE_NAME_HEADING: "Provinces"
 GOVERNOR_NAME_HEADING: "Governor"
 STATE_CAPITAL_IS: "#T Province Overview#!\n$NAME|Y$ is a part of $REGION|Y$. There are $COUNT|Y$ territories in this province and the Capital is $CAPITAL|Y$."
 PROV_ENTRY: "$NAME|Y$: Population $SIZE|Y$ & Produces: $GOOD|Y$"
 BUILD_REVISION: "#B Build: #! #TOOLTIP:SVN_REVISION [GetBuildRevision]#!"
 SVN_REVISION: "This is the SVN revision"
 PORT_TOOLTIP: "Port of $NAME|Y$ (Tier $PORT_LEVEL|Y$)"
 NO_SHIPS_IN_PORT: "\nCurrently there are no ships in port."
 OCCUPATION_FINISHED_IN_X_DAYS: "The occupation will be finished in $VAL|Y$ day(s).\nThe length of this occupation is due to:\n$WHY$"
 LONGSTATE_OF: "Province of $NAME$ in $REGION$"
 STATE_OF: "Province of $NAME$"
 BUILDING_LEVEL_TOOLTIP: "#T Possible Buildings#!\nEach city can have at least #H 1#! building, and #H 1#! for every $POP|Y$ Pop(s) in the city of $NAME|Y$, where there is $CURR|Y$ population at the moment."
 BUILDING_LEVEL_ADDITIONAL: "\nAnd an additional $VAL|=+$ buildings due to:\n"
 EVENT_DEBUG_CHARACTER_EVENT: "Event: $EVENT$ Character: $NAME$ [$ID$]\n"
 SCOPE_DEBUG_CHARACTER: "Character $NAME$ [$ID$]"
 SCOPE_DEBUG_PROVINCE: "Province $NAME$ [$ID$]"
 SCOPE_DEBUG_VALUE: "Value $VALUE$"
 SCOPE_DEBUG_COMBAT: "Combat $NAME$ [$ID$]"
 SCOPE_DEBUG_COMBAT_SIDE: "Combat Side $NAME$ [$ID$]"
 SCOPE_DEBUG_DEITY: "$NAME$ [$ID$]"
 SCOPE_DEBUG_INTEGER_FLAG: "Flag $NAME$ [$ID$]"
 SCOPE_DEBUG_WAR: "War $NAME$ [$ID$]"
 SCOPE_DEBUG_COUNTRY: "Country $NAME$ [$ID$]"
 SCOPE_DEBUG_FAMILY: "Family $NAME$ [$ID$]"
 SCOPE_DEBUG_UNIT: "Unit $NAME$ [$ID$]"
 SCOPE_DEBUG_SIEGE: "Siege $NAME$ [$ID$]"
 SCOPE_DEBUG_SUBUNIT: "Subunit $NAME$ [$ID$]"
 SCOPE_DEBUG_RELIGION: "Religion $NAME$ [$ID$]"
 SCOPE_DEBUG_CULTURE: "Culture $NAME$ [$ID$]"
 SCOPE_DEBUG_JOB: "Job $NAME$ [$ID$]"
 SCOPE_DEBUG_PARTY: "Party $NAME$ [$ID$]"
 SCOPE_DEBUG_CULTUREGROUP: "Culture Group $NAME$ [$ID$]"
 SCOPE_DEBUG_COUNTRY_CULTURE: "Country Culture $NAME$ [$ID$]"
 SCOPE_DEBUG_AREA: "Area $NAME$ [$ID$]"
 SCOPE_DEBUG_GOV: "Governorship $NAME$ [$ID$]"
 SCOPE_DEBUG_STATE: "State $NAME$ [$ID$]"
 SCOPE_DEBUG_POP: "Pop $NAME$ [$ID$]"
 SCOPE_DEBUG_POPTYPE: "PopType $NAME$ [$ID$]"
 SCOPE_DEBUG_REGION: "Region $NAME$ [$ID$]"
 SCOPE_DEBUG_GREAT_WORK: "Great Work $NAME$ [$ID$] in Province $PROV_NAME$ [$PROV_ID$]"
 POP_CULTURE_TITLE: ""
 POP_CULTURE_ITEM: "#t $NAME$#!\n$VAL|Y$ ($PERC|%$)"
 POP_SUB_CULTURE_ITEM: "$NAME$: $VAL|Y$ ($PERC|%$)"
 POP_CULTURE_BREAKDOWN_TEXT: "Cultures in this Culture Group:"
 POP_RELIGION_ITEM: "#t $NAME$#!\n$VAL|Y$ ($PERC|%$)"
 POP_TYPE_ITEM: "#t $NAME$#!\n$VAL|Y$ ($PERC|%$)"
 MALE: "Male"
 FEMALE: "Female"
 STAT_HEALTH: "Health"
 IS_PREGNANT_TEXT: "Pregnant"
 IS_PREGNANT_TT: "Pregnant with a due date of $WHEN|Y$"
 IS_PREGNANT_DETAILED_TT: "#T Pregnant#!\nThe due date is $WHEN|Y$"
 HEALTH_INFO_TT: "#T Health#!\nCurrently at $VALUE|/%2Y$\n$CHANGE$\n#TF A character's health indicates their overall state and fitness. Health can be reduced by disease, actions and events, and if it reaches 0, the character will die!#!"
 HEALTH_CHANGES_BY: "It changes by $VALUE|+=/%$ each month due to:\n$WHY$"
 HEALTH_NOT_CHANGING: "Currently not changing."
 CHARACTER_EXPERIENCE_INFO_TT: "#T Statesmanship#!\nCurrently at $VALUE|/%2Y$\n$CHANGE$\n#TF A character will gain more Statesmanship based on current and prior positions in office. Characters with more Statesmanship will be able to better perform their duties, enabling additional bonuses and events!#!"
 CHARACTER_EXPERIENCE_CHANGES_BY: "It changes by $VALUE|+=/%$ each month due to:\n$WHY$"
 CHARACTER_EXPERIENCE_NOT_CHANGING: "Currently not changing."
 CHARACTER_DEBUG_TOOLTIP: "#D DEBUG:#!\nID: [CHARACTER.GetID|Y]"
 CHARACTER_TRAITS: "Traits: $TRAITS|V$"
 WEALTH_RICH: "Rich"
 WEALTH_POOR: "Poor"
 CIVILWAR_FACTION_NAME: "$ADJ$ Revolt"
 CIVILWAR_FACTION_ADJECTIVE: "$ADJ$"
 MILITARY_POWER: "Military Power"
 CIVIC_POWER: "Civic Power"
 ORATORY_POWER: "Oratory Power"
 RELIGIOUS_POWER: "Religious Power"
 MILITARY_POWER_DESC: "Military Power, or Virtus to the Romans, denotes strength, courage and honor. This value represents the accumulation of your nation's military potential."
 CIVIC_POWER_DESC: "Civic Power, also referred to as Gravitas by the Romans, is associated with responsibility, finesse and grandeur, and may be spent on improving the many civic aspects of your nation."
 ORATORY_POWER_DESC: "Oratory Power, synonymous with the Roman concept of Dignitas, commonly denotes prestige, charisma and standing, and may be invested on making important decisions for your nation."
 RELIGIOUS_POWER_DESC: "Religious Power, also known as the Roman virtue Pietas, represents a nation's devotion, piety and zeal. You may spend this on numerous religious actions."
 MONTHLY_POWER_GAIN_DUE_TO: "Changes monthly by $VAL|=+$ due to:\n"
 POWER_BASE_GAIN: "Base: $VAL|=+$\n"
 POWER_GOV_GAIN: "Ideas Match Government: $VAL|=+$\n"
 POWER_RULER_GAIN: "$TITLE$ $NAME$ ($SKILL$): $VAL|=+$\n"
 ATTRIB_BASE: "Base: $VAL|=+$"
 PRICE_COST_VALUE_S: "$VAL|Y$ @$ICON$!"
 PRICE_COST_VALUE: "$VAL|Y$ @$ICON$!"
 PRICE_stability_COST_VALUE: "$INVVAL|+=$ @$ICON$!"
 PRICE_tyranny_COST_VALUE: "$VAL|-=$ @$ICON$!"
 PRICE_war_exhaustion_COST_VALUE: "$VAL|-=$ @$ICON$!"
 PRICE_aggressive_expansion_COST_VALUE: "$VAL|-=$ @$ICON$!"
 PRICE_political_influence_COST_VALUE: "$VAL|Y$ @$ICON$!"
 PRICE_military_experience_COST_VALUE: "$VAL|Y0$ @$ICON$!"
 PRICE_COST_VALUE_NO_COL: "$VAL$ @$ICON$!"
 PRICE_military_experience_COST_VALUE_NO_COL: "$VAL|0$ @$ICON$!"
 PRICE_LONG_COST_VALUE: "$VAL|Y$ @$ICON$!"
 PRICE_stability_LONG_COST_VALUE: "$INVVAL|+=$ @$ICON$! Stability"
 PRICE_tyranny_LONG_COST_VALUE: "$VAL|-=$ @$ICON$! Tyranny"
 PRICE_political_influence_LONG_COST_VALUE: "$VAL|y$ @$ICON$! Political Influence"
 PRICE_military_experience_LONG_COST_VALUE: "$VAL|y$ @$ICON$! Military Experience"
 PRICE_war_exhaustion_LONG_COST_VALUE: "$VAL|-=$ @$ICON$! War Exhaustion"
 PRICE_aggressive_expansion_LONG_COST_VALUE: "$VAL|-=$ @$ICON$! Aggressive Expansion"
 PRICE_innovations_LONG_COST_VALUE: "$VAL|-=$ @$ICON$! Innovations"
 PRICE_gold_LONG_COST_VALUE: "$VAL|Y$ @$ICON$! Gold"
 PRICE_BASE_VALUE: "Base Cost: $VAL|Y$ @$ICON$!"
 MODIFIER_ALL_POWER_COST: "Power Costs"
 PRICE_NOT_ENOUGH_VALUE_GOOD: "@trigger_no!You lack the $NEED|2Y$ @$KEY$! required!\n"
 PRICE_NOT_ENOUGH_VALUE_BAD: "@trigger_no!You have too much  @$KEY$! to be able to add $NEED|Y$\n"
 CHAR_INTE_ONLY_FOREIGN: "@trigger_no!Can only be used on foreign characters"
 CHAR_INTE_ONLY_DOMESTIC: "@trigger_no!Can only be used on characters in your own country."
 CHAR_INT_NOT_POSSIBLE: "It is not possible to $NAME|Y$ due to:"
 ABILITY_TITLE: "#T $NAME$#!"
 ABILITY_WOULD: "It would have the following effect:"
 ONLY_ONE_UNIT_TOGGLE_AT_SAME_TIME: "Can not be activated while $WHICH|Y$ is active."
 ACTIVE_ABILITY_TT: "#T $NAME$#!\n$MODIFIER$\n#TF $DESC$#!\n"
 ACTIVE_ABILITY_TOGGLE_TT: "#T $NAME$#!\n$MODIFIER$\n#TF $DESC$#!\n#I (Click to toggle off)#!"
 UNIT_ABIL_NOT_POSSIBLE: "It is not possible to $NAME|Y$ due to:"
 UNTIL_DONE: "done with the action"
 UNTIL_CANCELLED: "canceled"
 MODIFIER_FOR_UA: "This unit gains $EFFECT$ until $WHEN|Y$"
 MODIFIER_FOR_UA_HAS: "This unit has '$NAME|Y$' active, gaining $EFFECT$ until $WHEN|Y$"
 ABILITY_HISTORY: "#TF $DESC$#!"
 TRAITS_LIST: "Traits"
 NO_OFFICE_TO_REMOVE: "$NAME|Y$ is not holding any office!"
 NO_OFFICE_REMOVE_IN_OTHER: "$NAME|Y$ is not in our country!"
 REMOVE_THIS_OFFICE: "Remove the office of $OFFICE|Y$ from $NAME$."
 CHANGE_OFFICE: "#T Change $NAME$#!\nClick to select another character to be your $NAME|Y$\nThe new $NAME|Y$ will get Loyalty: [Concept( 'loyalty', GetLoyaltyEntry('loyalty_office_gained').GetName )|E] #G +#![GetLoyaltyEntry('loyalty_office_gained').GetValue|G]\nFired characters will lose Loyalty: [Concept( 'loyalty', GetLoyaltyEntry('loyalty_office_lost').GetName )|E] [GetLoyaltyEntry('loyalty_office_lost').GetValue|R]\n"
 CHARACTER_AGE: "$AGE$ years old"
 CHARACTER_AGE_SINGULAR: "$AGE$ year old"
 CHARACTER_AGE_INFANT: "Infant"
 OUR_RULER_AS_PLAYER: "[Character.GetPraenomen|Y] is the ruler of [Character.GetEmployer.GetName|Y]"
 DEAD: "Dead"
 DEAD_SINCE: "Dead since $DATE|Y$"
 DIED_AT_AGE: "#T Dead#!\nDied at age $AGE|Y$"
 DIED_AT_AGE_SINGULAR: "#T Dead#!\nDied at age $AGE|Y$"
 DIED_AS_INFANT: "#T Dead#!\nDied as an infant"
 CHARACTER_DEAD_TOOLTIP: ", on $DATE|Y$\n[CHARACTER.GetDeathReason|U]."
 CHARACTER_INTERACTION_REPLY: "[CHARACTER.GetFirstName] is waiting for answer regarding $INTERACTION|Y$."
 CHARACTER_INTERACTION_REPLY_MARRIAGE: "[CHARACTER.GetFirstName] is waiting for answer regarding $INTERACTION|Y$ between [TARGET_CHARACTER.GetFirstName] and [TARGET_CHARACTER_2.GetFirstName]."
 CHARACTER_INTERACTION_REPLY_TITLE: "Character Interaction Answer"
 CHARACTER_INTERACTION_REPLY_POSITIVE: "$NAME$ accepted my $INTERACTION|Y$."
 CHARACTER_INTERACTION_REPLY_NEGATIVE: "$NAME$ rejected my $INTERACTION|Y$."
 NEXT_LEVEL_GIVES: "\nNext level gives:\n"
 BASE_COLON: "Base: $VALUE|V0$"
 BASE_PERC_COLON: "Base: #Y $VALUE$%#!"
 BASE_COLON_TO_PERC: "Base: $VALUE|Y%$"
 WRONG_CULTURE_GROUP_HAPPYNESS: "\nUnintegrated Foreign Culture: $VALUE|+0%$"
 WRONG_CULTURE_HAPPYNESS: "\nUnintegrated [CULTURE.GetCultureGroup.GetName] Culture: $VALUE|+0%$"
 WRONG_RELIGION_HAPPINESS: "\nNot State Religion: $VALUE|+0%$"
 WRONG_GOVERNOR_RELIGION_HAPPNESS: "\nGovernor is $RELIGION$: $VALUE|+0%$"
 PRIMARY_CULTURE_HAPPINESS: "Integrated Culture: $VALUE|+0%$"
 DEITY_SAME_RELIGION_HAPPINESS: "\nPantheon Deity $DEITY|Y$: $VALUE|+1%$"
 CONVERSION_IS_STALLED: "The conversion of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' to $CONVERT|Y$ is currently stalled.\n$HOW$"
 CONVERSION_TICK_TT: "In $WHEN|Y$ a #Y $RELIGION$ $CULTURE$ $TYPE$#! is converting to the $CONVERT|Y$ faith!\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 PROMOTION_IS_STALLED: "The promotion of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' to $PROMOTE|Y$ is currently stalled.\n$HOW$"
 PROMOTION_TICK_TT: "In $WHEN|Y$ a #Y $RELIGION$ $CULTURE$ $TYPE$#! will be promoted to a $PROMOTE|Y$!\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 DEMOTION_IS_STALLED: "The demotion of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' to $DEMOTE|Y$ is currently stalled.\n$HOW$"
 DEMOTION_TICK_TT: "In $WHEN|Y$ a #Y $RELIGION$ $CULTURE$ $TYPE$#! will be demoted to a $DEMOTE|Y$!\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 ASSIMILATION_IS_STALLED: "The assimilation of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' to $ASSIMILATE|Y$ is currently stalled.\n$HOW$"
 ASSIMILATE_TICK_TT: "In $WHEN|Y$ a #Y $RELIGION$ $CULTURE$ $TYPE$#! is assimilating into becoming $ASSIMILATE|Y$.\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 GROWTH_IS_STALLED: "The growth of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' is currently stalled.\n$HOW$"
 GROWTH_IS_DECLINING: "In $WHEN|Y$ this '#Y $RELIGION$ $CULTURE$ $TYPE$#!' will have died, and another Pop will begin dying. Every month #R $MONTHLY|2$%#! is lost.\n$HOW$"
 GROWTH_IS_GROWING: "In $WHEN|Y$ a #Y $CULTURE$ $TYPE$#! following the #Y $RELIGION$#! faith will have grown.\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 MIGRATION_IS_STALLED: "The migration of a '#Y $RELIGION$ $CULTURE$ $TYPE$#!' to $TARGET|Y$ is currently stalled.\n$HOW$"
 MIGRATE_TICK_TT: "In $WHEN|Y$ a #Y $RELIGION$ $CULTURE$ $TYPE$#! will have migrated to $TARGET|Y$.\n\nEvery month #Y $MONTHLY|2$%#! is gained, and it is currently at #Y $CURR$%#!. \n$HOW$"
 POP_DETAILS: "The Population of [PROVINCE.GetName]"
 DESIRED_SPLIT_TT: "#T Optimal Ratio of $TYPE$ in [PROVINCE.GetName]#!\n"
 CURRENT_POP_RATIO: "#T Current Ratio#!\n"
 POP_RATIO_TT: "$LEFT|0Y$ out of $MAX|0y$ creates a final desired ratio of $RESULT|0y$%"
 NO_POP_CONVERSION: "#T No Current Conversion#!\nThere are no pops in this territory that can be converted at this time."
 NO_POP_ASSIMILATE: "#T No Current Assimilations#!\nThere are no pops in this territory that can be assimilated at this time."
 NO_POP_PROMOTION: "#T No Current Promotions#!\nThere are no pops in this territory that can be promoted at this time."
 NO_POP_DEMOTION: "#T No Current Demotions#!\nThere are no pops in this territory that can be demoted at this time."
 NO_POP_DEMOTING_TEXT: "No Pop Demoting"
 NO_POP_GROWING: "No Pop Growing"
 POP_CHANGES: "Outgoing Migration"
 POP_CHANGES_INCOMING: "Incoming Migration"
 NO_POP_MIGRATING_TEXT: "Nobody is migrating away."
 NO_POP_MIGRATING_TT: "#T Migration#!\nThere are no neighboring territories, or territories in the province, or ports in our nation that are more attractive for a pop to move to."
 UNHAPPY_POPS: "Unhappy Pops: "
 ADD_POP_BUTTON: "Move Pop Here"
 MOVEPOP_TITLE: "Select Pop to move to this territory!"
 SelectMoveGlue_text: "From [SelectMoveGlue.GetPop.GetProvince.GetName]"
 POP_MOVE_STATE_TT: "#T Province#!"
 POP_MOVE_AMOUNT_TT: "#T Amount of this Type of Pop#!\nThis is the amount of this type of pop left in the territory."
 POPTYPES: "Classes"
 YES: "Yes"
 NO: "No"
 HIGHLT: "$KEY|Y$"
 OPINION_MTTH: "$WHO$'s Opinion of $TARGET$ : $VALUE|+0$"
 SCRIPTED_VALUE_MODIFIER: "$VALUE|+0$ : Value"
 AI_VALUE_MODIFIER: "AI Value Modifier: $VALUE|+0$"
 AI_VALUE_MODIFIER_MIN_VALUE: "*Minimum value: $VALUE|+0$"
 AI_VALUE_MODIFIER_MAX_VALUE: "*Maximum value: $VALUE|+0$"
 AI_VALUE_MODIFIER_HONOR: "*Honor: $VALUE|+0$"
 AI_VALUE_MODIFIER_GREED: "*Greed: $VALUE|+0$"
 AI_VALUE_MODIFIER_RATIONALITY: "*Rationality: $VALUE|+0$"
 AI_VALUE_MODIFIER_ENERGY: "*Energy: $VALUE|+0$"
 AI_VALUE_MODIFIER_BOLDNESS: "*Boldness: $VALUE|+0$"
 AI_VALUE_MODIFIER_ZEAL: "*Zeal: $VALUE|+0$"
 AI_VALUE_MODIFIER_VENGEFULNESS: "*Vengefulness: $VALUE|+0$"
 AI_VALUE_MODIFIER_COMPASSION: "*Compassion: $VALUE|+0$"
 CHARACTER_HESHE_SHE: "she"
 CHARACTER_HESHE_HE: "he"
 CHARACTER_HERHIM_HER: "her"
 CHARACTER_HERHIM_HIM: "him"
 CHARACTER_HERHIS_HER: "her"
 CHARACTER_HERHIS_HIS: "his"
 CHARACTER_HERSHIS_HERS: "hers"
 CHARACTER_HERSHIS_HIS: "his"
 CHARACTER_WOMAN: "woman"
 CHARACTER_MAN: "man"
 CHARACTER_WOMEN: "women"
 CHARACTER_MEN: "men"
 CHARACTER_HERSELF: "herself"
 CHARACTER_HIMSELF: "himself"
 CHARACTER_WIFE: "wife"
 CHARACTER_HUSBAND: "husband"
 CHARACTER_MOTHER: "mother"
 CHARACTER_FATHER: "father"
 CHARACTER_DAUGHTER: "daughter"
 CHARACTER_SON: "son"
 CHARACTER_BROTHER: "brother"
 CHARACTER_SISTER: "sister"
 CHARACTER_NIECE: "niece"
 CHARACTER_NEPHEW: "nephew"
 CHARACTER_AUNT: "aunt"
 CHARACTER_UNCLE: "uncle"
 CHARACTER_IS: "is"
 CHARACTER_WAS: "was"
 CHARACTER_POSS_CHECK: "s"
 CHARACTER_POSS: "'s"
 CHARACTER_POSS_SPECIAL: "'"
 VASSAL_TO: "[vassal|E] to $LIEGE$"
 IS_SECOND_RANK: "Can fight from second rank."
 CAN_ASSAULT: "Can Assault."
 MY_LIST: "My $LIST$"
 THIS_IS_YOU: "This is me"
 MILITARY_VIEW: "Military"
 REALM_VIEW: "Realm View (Old military view)"
 ARMY_LEVIES: "Levies"
 DOMAIN: "Domain"
 VASSALS: "[vassals]"
 HIRED: "Hired"
 TOTAL: "Total"
 RAISE_ALL: "Raise All Banners"
 DISBAND_ALL: "Disband All"
 SORT_RANK: "Rank"
 SORT_NAME: "Name"
 SORT_OPINION: "Opinion"
 SORT_STRENGTH: "Strength"
 SORT_INCOME: "Income"
 COMMON_INFO_LIST_PREFIX: "* "
 HAS_HOOK_ON_ME: "$WHO$ has a hook on me."
 YOU_HAVE_HOOK: "I have a hook on $WHO$."
 COMMON_CHAR_INFO: "* Has a hook on me\n* Ist mein Spoinmeisternin\n* Has The Plague"
 EXPENSES: "Expenses"
 AUTOSAVE_IN_PROGRESS: "Auto Save"
 SAVE_IN_PROGRESS: "Saving"
 TITLED_FULL_NAME: "$TIER$ #TOOLTIP:CHAR_TOOLTIP,$ID$ $NAME|L$#! $DYNASTY$ of $TITLE$"
 TITLED_FIRST_NAME: "$TIER$ #TOOLTIP:CHAR_TOOLTIP,$ID$ $NAME|L$#!"
 FULL_NAME: "#TOOLTIP:CHAR_TOOLTIP,$ID$ $NAME|L$#! $DYNASTY$"
 TITLED_FULL_NAME_NO_TOOLTIP: "$TIER$ $NAME$ $DYNASTY$ of $TITLE$"
 TITLED_FIRST_NAME_NO_TOOLTIP: "$TIER$ $NAME$"
 FULL_NAME_NO_TOOLTIP: "$NAME$ $DYNASTY$"
 FIRST_NAME_TOOLTIP: "#TOOLTIP:CHAR_TOOLTIP,$ID$ $NAME|L$#!"
 FULL_TITLE_NAME: "$TIER$ of $TITLE$"
 DYNASTY_MEMBERS: "Members in the '$DYNASTY|Y$' dynasty: \n$LIST$"
 VASSAL_CONTRACT_VIEW: "Vassal Contracts"
 VASSAL_CONTRACT_INFO: "Choose a [vassal|E] from the list to review their Contract."
 GOOD_COLOR: "$KEY|G$"
 BAD_COLOR: "$KEY|R$"
 NEUTRAL_COLOR: "$KEY|Y$"
 GOTO_PROVINCE: "Go to location"
 DYNASTY: "Dynasty"
 MENU: "Menu"
 RESUME: "Resume"
 PAUSE: "Pause"
 MESSAGE_SETTINGS: "Message Settings"
 MESSAGE_HEADER: "Message"
 SETTINGS_HEADER: "Settings"
 RESET_TO_DEFAULT: "Reset"
 MESSAGE_SETTINGS_LOG_TOOLTIP: "Toggle whether this message will be logged or not"
 MESSAGE_SETTINGS_POPUP_TOOLTIP: "Toggle whether this message will popup or not"
 MESSAGE_SETTINGS_PAUSE_TOOLTIP: "Toggle whether this message will pause the game or not"
 MESSAGE_SETTINGS_SHOW_ON_MAP_TOOLTIP: "Toggle whether this message will be shown on map or not (if applicable)"
 TUTORIAL_HEADER_OBJECTIVES: "Objectives"
 EXIT: "Exit"
 EXIT_TO_DESKTOP: "Exit to Desktop"
 RESIGN: "Exit to Menu"
 IRONMAN_CHOOSE_SAVE: "Ironman Save"
 RESIGNATION_CONFIRMATION_DESC: "Are you sure you want to Exit to Menu?\nAny unsaved progress will be lost"
 QUIT_TO_DESKTOP_CONFIRMATION_DESC: "Are you sure you want to Exit to Desktop?\nAny unsaved progress will be lost"
 OVERWRITE_SAVE_CONFIRMATION_DESC: "Are you sure you want to overwrite the file $SAVE_NAME|Y$?"
 DELETE_SAVE_CONFIRMATION_DESC: "Are you sure you want to delete the file $SAVE_NAME|Y$?"
 LOAD_OLD_SAVE_DESC: "$SAVE_NAME|Y$ is from a different version. Are you sure you want to load it?"
 OPEN_FOR_MULTIPLAYER: "Open for Multiplayer"
 HOST: "Host"
 JOINING_SERVER_PROGRESS: "Joining server: $PROGRESS|0%$"
 GENERATING_BOOKMARK_PROGRESS: "Generating world from history: $PROGRESS|0%$"
 LOADING_SAVEGAME_PROGRESS: "Loading savegame: $PROGRESS|0%$"
 SERVER_NAME: "Game of $NAME$"
 PLAYERS: "Players"
 PLAYERS_ON_SERVER: "Players on server: NAME - TITLE - PING"
 PLAYER_ON_SERVER: "$NAME$ - $TITLE$ - $PING$"
 PLAYER_LAGGING: "$NAME|R$ is lagging behind"
 NAME_NOT_FOUND: "Name not found."
 KICK_SELF: "Don't kick yourself..."
 KICK_NAME: "$NAME$ was kicked from the game."
 BLOCK_COMMAND_MULTIPLAYER_IRONMAN: "Command not available in Multiplayer or Ironman mode"
 BLOCK_COMMAND_ONLY_HOST: "Command only available for the Host"
 MODIFIED: "Modified: $DATE$"
 PLAYER_LEFT: "Player left"
 PLAYER_NAME_LEFT: "$NAME$ left the game."
 PLAYER_NAME_JOINED: "$NAME$ joined the game."
 KEY_VALUE: "$KEY$: $VALUE|V0$"
 KEY_VALUE_F1: "$KEY$: $VALUE|V1$"
 KEY_VALUE_F2: "$KEY$: $VALUE|V2$"
 KEY_VALUE_PERCENT: "$KEY$: $VALUE|V0%$"
 CHARACTER_VALUE: "[CHARACTER.GetName]: $VALUE|V0$"
 CHARACTER_VALUE_F1: "[CHARACTER.GetName]: $VALUE|V1$"
 CHARACTER_VALUE_F2: "[CHARACTER.GetName]: $VALUE|V2$"
 SIMPLE_VALUE_PERCENT: "$VALUE|V%0$"
 ERROR_TOOLTIP: "I am the Error-Platypus known as 'Rageair 2.0'. I'm here because there are $ERRORS$ error(s) in your game. Click me and I'll show them to you."
 BANNER_TOOLTIP_HEADER: "Banner in $NAME|Y$"
 BANNER_TOOLTIP_CHARACTERS_HEADER: "Characters using this Banner:"
 BANNER_TOOLTIP_CHARACTER_ENTRY: "[CHARACTER.GetName]"
 CONFIRM: "Confirm"
 friends: "Friends"
 friend_plural: "Friends"
 friends_desc: "Friendship are forever."
 PLAYER_NEEDED_IF_ONLY_ONE_ARG: "Valid player needed if only one argument is used."
 INVALID_CHARACTER: "Invalid character"
 INVALID_RELATION: "Invalid relation"
 RELATION_ADDED: "Added relation $RELATION$ between $CHAR01$ and $CHAR02$"
 RELATION_REMOVED: "Removed relation $RELATION$ between $CHAR01$ and $CHAR02$"
 SET_SCRIPTED_RELATION: "$CHAR01$ will become a $RELATION01|Y$ to $CHAR02$"
 SET_SCRIPTED_RELATION_SAME: "$CHAR01$ and $CHAR02$ become $RELATION01|Y$"
 SET_SCRIPTED_RELATION_DIFFERENT: "$CHAR01$ becomes $RELATION01|Y$ of $CHAR02$ and $CHAR02$ becomes the $RELATION02|Y$ of $CHAR01$"
 REMOVE_SCRIPTED_RELATION: "$CHAR01$ will no longer be a $RELATION|Y$ to $CHAR02$"
 HAS_SCRIPTED_RELATION: "$CHAR01$ is the $RELATION|Y$ of $CHAR02$"
 TITLE_DEFINITE_FORM: "the $TITLE$"
 DURATION_FOREVER: "#Y Forever#! "
 DURATION_DATE: "$DATE|V$"
 DURATION_DATE_RANGE: "$DATE_MIN|V$ - $DATE_MAX|V$"
 NUMBER_OF_MEN: "[soldiers|E]"
 NUMBER_OF_COHORTS: "Number of Cohorts"
 TIME_TO_RAISE: "Time to gather"
 DAYS: "Days"
 VALUE_DAYS: "#V $VALUE$ days#! "
 BANNER: "Banner"
 SCOPE_CHARACTER: "[SCOPE.GetCharacter.GetName]:\n"
 SCOPE_ACTIVITY: "[SCOPE.GetActivity.GetName]:\n"
 FILE_NAME_INVALID: "#R Invalid File Name#! "
 SAVE_NAME_NOT_ALLOWED: "$FILE_NAME_INVALID$"
 SAVE_WAITING_ON_AUTOSAVE: "#R Autosave in Progress#!"
 event_target_desc: "A scope can be saved as an \"event target\". It will then be accessible to from any trigger/effect that can be \"traced backwards\" in a direct line to the point where you saved the event target (i.e. any triggers that are checked or effects that are fired after saving the event target, but only in a continuous chain, such as an event chain). If an event chain ends, the event target is lost.\nNote that a number of on_actions set up by code, and a number of special interactions, come with their own predefined event targets.\nFinal note: You can also save values and bools as event targets, which might be handy in certain situations."
 parameter_desc: "Leftover from Stellaris. If you are considering using this, you are probably better off using scopes saved as variables. (Change this description if we have started using \"parameter\" for whichever reason!)"
 variable_desc: "Script variables are accessible and modifiable by script. They currently come in the following forms:\n\nvariable:example_number = 1\nvariable:example_flag = flag:example\nvariable:example_scope = root\nvariable:example_bool = yes"
 flag_desc: "Flags are simple markers that you can use to trace that something has happened in the game. They have a specific type depending on what kind of scope it was set in (character flag, scheme flag, etc.). The particular scope (for example a particular character) will have the flag set until it is removed by an effect, or until its timer runs out, if a timer was defined for it."
 TODO: "TODO: $WHAT$"
 EVENT_SIGNED: "Signed, [CHARACTER.GetTitle]"
 EVENT_SIGNATURE: "[CHARACTER.GetFullNameNoTooltip]"
 EVENT_REASON_SEPARATOR: ", "
 EVENT_REASON_SKILL: "$SKILL|Y$ Skill"
 EVENT_REASON_TRAIT: "$TRAIT|Y$ Trait"
 EVENT_REASONS_LAST_REASON: "$REASONS$ and $LAST_REASON$"
 EVENT_REASONS: "This option is available because of my $REASONS$."
 NAME_ME: "#TOOLTIP:CHAR_TOOLTIP,$ID$ #L me#!#!"
 CHILDREN: "Children"
 SIBLINGS: "Siblings"
 RIVALS: "Rivals"
 FRIENDS: "Friends"
 MOTHER: "Mother"
 FATHER: "Father"
 MOTHER_WIFE: "Mother-wife"
 FATHER_HUSBAND: "Father-husband"
 GRANDMOTHER: "Grandmother"
 GRANDFATHER: "Grandfather"
 GREATGRANDMOTHER: "Great-grandmother"
 GREATGRANDFATHER: "Great-grandfather"
 DAUGHTER: "Daughter"
 SON: "Son"
 DAUGHTER_WIFE: "Daughter-wife"
 SON_HUSBAND: "Son-husband"
 GRANDDAUGHTER: "Granddaughter"
 GRANDSON: "Grandson"
 GREATGRANDDAUGHTER: "Great-granddaughter"
 GREATGRANDSON: "Great-grandson"
 BROTHER: "Brother"
 SISTER: "Sister"
 HALF_BROTHER: "Half Brother"
 HALF_SISTER: "Half Sister"
 BROTHER_HUSBAND: "Brother-husband"
 SISTER_WIFE: "Sister-wife"
 BROTHER_IN_LAW: "Brother-in-law"
 SISTER_IN_LAW: "Sister-in-law"
 UNCLE: "Uncle"
 AUNT: "Aunt"
 NEPHEW: "Nephew"
 NIECE: "Niece"
 WIFE: "Wife"
 HUSBAND: "Husband"
 MY_VALUE_COLON: "My $KEY$: $VALUE|V$"
 CHARACTER_VALUE_COLON: "[CHARACTER.GetFirstNamePossessive] $KEY$: $VALUE|Y$"
 SCREENSHOT_TAKEN: "Screenshot taken!"
 TRAIT_TOOLTIP: "#T $NAME$#!\n$DESC$"
 FERTILITY_COLON: "Fertility: $VALUE|V$"
 BIRTH_DATE: "#T Age#!\n$NAME$ was born on $DATE|Y$ and is currently $AGE$ years old."
 YEARS_COUNT_SINGULAR: "#V 1 year#!"
 YEARS_COUNT_PLURAL: "#V $VALUE$ years#!"
 YEARS_COUNT_SINGULAR_NO_FORMAT: "1 year"
 YEARS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ years"
 MONTHS_COUNT_SINGULAR: "#V 1 month#!"
 MONTHS_COUNT_PLURAL: "#V $VALUE$ months#!"
 MONTHS_COUNT_SINGULAR_NO_FORMAT: "1 month"
 MONTHS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ months"
 DAYS_COUNT_SINGULAR: "#V 1 day#!"
 DAYS_COUNT_PLURAL: "#V $VALUE$ days#!"
 DAYS_COUNT_SINGULAR_NO_FORMAT: "1 day"
 DAYS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ days"
 SKILL_AND_LEVEL_VALUE: "$VALUE|V$ ($LEVEL|V$)"
 SKILL_POOR: "Poor"
 SKILL_AVERAGE: "Average"
 SKILL_GOOD: "Good"
 SKILL_EXCELLENT: "Excellent"
 THE_WORLD: "[GetDateString] AVC ([GetChristianDateString])"
 THE_WORLD_CATCHING_UP: "Catching up to host ([GetDateString] AVC)"
 THE_WORLD_TOOLTIP: "#T Current Date#!\nAVC stands for Ab Urbe Condita, or 'From the Founding of the City', is a dating convention commonly used by scholars in reference to Rome and Roman history, and establishes AUC 1 as the year of the founding of Rome. The year AUC 450, therefore, corresponds to 304 BC in the modern Gregorian calendar."
 military_building: "Training Camp"
 military_building_desc: "The agrarian nature of the early ancient world necessitated seasonal military campaigns, during the summer months between the planting and harvest seasons. Every year the citizens would muster in a field outside the city limits, such as the Agorai of the Greek city states or the Campus Martius of Rome, in preparation for that year's war against their neighbors."
 fortress_building: "Fortress"
 fortress_building_desc: "The construction of stand-alone fortresses was not that common in the classical world, but the construction of walls to protect whole cities, such as the Servian Wall in Rome, or constructing a fortified citadel on its acropolis, such as the fabled Seven-Gated Wall of the Kadmeia of Thebes, was quite widespread. The most famous fortification work of the Hellenic world was the Long Walls of Athens, which connected Athens itself with its port Peiraieus."
 commerce_building: "Marketplace"
 commerce_building_desc: "Early marketplaces were informal phenomena, often appearing in the fields outside a city, primarily focused on places where people congregated. As city-states grew, these Agorai often developed into the center for commercial, religious, political, and cultural life; the beating heart of any city. The Greek Agora even influenced the set-up and the significance of both the Roman Fora and the Carthaginian marketplaces."
 population_building: "Granary"
 population_building_desc: "The issue of storing food-stuffs from one harvest to the next is as old as agriculture itself. Various ancient cultures came up with solutions to storing grain over long periods while keeping it dry and pest-free; from the raised floors of Roman Granarium, the dug out pits of the Greek Silo, to the Egyptian use of cats to keep pests under control. Long-term storage of grain allowed for a food surplus, a prerequisite for population growth, and eventually civilization itself."
 forum_building: "Forum"
 forum_building_desc: "Influenced by the Greek Agora, the Roman Forum was the hub of the Eternal City. Apart from the commercial, judicial and religious activities of the Forum, its main function was that of political nucleus, where the senators convened in the Comitium, and where the Roman Populus came to hear political speeches, and assembled to cast their vote in elections."
 workshop_building: "Mill"
 workshop_building_desc: "The use of small-scale hand-powered mills in the home has been around since the beginning of human agriculture. Larger versions can be powered by draft-animals. The later invention of the watermill enabled their use in mining and construction as tools for crushing ore and cutting wood and marble. Watermills generally decreased reliance on human and animal powered labor, substantially increasing productivity and efficiency in the production of raw materials."
 library_building: "Library"
 library_building_desc: "The earliest known library was the Hittite collection of cuneiform tablets in Hattusa from 1900 BCE, but large institutional libraries became more common in the 3rd century BCE. They were commonly archives for empires or kingdoms, but also for religious institutions, or attached to institutions of higher learning. The largest and most famous library of the ancient world was the Great Library of Alexandria, which may have contained up to 400,000 texts at its height. The destruction of the Great Library is considered as one of the greatest tragedies of the ancient world."
 town_hall_building: "Tax Office"
 town_hall_building_desc: "Every government needs a treasury to house the funds necessary for a functioning state-apparatus, such as public building projects or troop wages. The treasury of ancient Rome, the Aerarium Populi Romani, was located in the Temple of Saturn on the Forum Romanum, which also housed legionary standards, senate decrees, and the laws of Rome engraved on brass tablets. The funds were mainly from tax income, collected by the Publicani, Roman Equites who had won contract bids for the right to farm taxes in a specified province."
 theathre_building: "Grand Theater"
 theathre_building_desc: "Early Greek theater was a relatively simple affair, with a choir and masked actors performing in front of the Skene, a building that served as a backdrop, and seats built into a hillside. The Romans adopted the Greek architecture for their theaters, but built them as free-standing structures, which in turn allowed them to build completely circular theater buildings, or amphitheaters. Due to the different acoustic effects of normal semi-circular theaters and amphitheaters, they tended to host different types of events. Theaters would host plays, pantomimes, and speeches, while amphitheaters, such as the famous Amphitheatrum Flavium, would host gladiatorial combats, races, or sometimes, as in 80 CE, reenactments of naval battles, Naumachiae."
 court_building: "Court of Law"
 court_building_desc: "The most common form of Roman litigation during the Republic, Legis Actiones, Actions of Law, involved a formal hearing in front of a magistrate, upon which a judge was agreed upon by both parties. The judge had to be a Roman citizen of senatorial rank, and was selected from a list called the Album Iudicum, but did not need to have any legal training or expertise. After this the trial was held in a public place, usually the Forum Romanum, during which either side could be represented by an advocate. At the end, the judge would rule in whatever manner seemed most just."
 academy_building: "Academy"
 academy_building_desc: "The first academy was founded by Plato in the early 4th century BCE, on a property he owned on the Akademeia, a hill outside Athens, where there was a grove of olive trees dedicated to Athena, goddess of wisdom. Plato lectured and posed problems to the Academy's members. Later, his student Aristotle would found the Lyceum, his own academy in Athens proper, where Aristotle would pass on his philosophy, and where he founded a library. Both schools were destroyed by Lucius Cornelius Sulla in 86 BCE during his siege of Athens."
 temple_building: "Great Temple"
 temple_building_desc: "Temples are religious spaces, often buildings containing a shrine, dedicated to a deity. These could often have secondary functions beyond the religious, such as the Temple of Saturn in Rome doubling as the state treasury, the olive grove dedicated to Athena at the Akademeia being the site of Plato's academy, or the Campus Martius, the Field of Mars, being the site of annual Roman military muster. Even the Roman senate had to convene in a space dedicated to the gods. The most famous ancient temple is probably the temple of Athena, the Parthenon, in Athens, the ruins of which can still be seen today."
 foundry_building: "Foundry"
 foundry_building_desc: "In Ancient Rome, Fabricae or Officinae were workshops or manufactories that worked in hard materials like metal and stone. Officinae Armorum, armories, would produce arms and armor, but such smithies could also produce iron nails and fittings for use by ship-wrights and in construction. In the later Imperial period, state-run Fabricae would produce arms and armor for whole legions. Hephaistos, the Greek god of fire and smithing, operated an armory, where he forged the legendary arms and armor of the gods."
 aqueduct_building: "Aqueduct"
 aqueduct_building_desc: "Although most associated with Rome, aqueducts are believed to have appeared first on the Indian subcontinent. In Greece also, constructions such as the Epaulinian Aqueduct on Samos, which brought fresh-water to Pythagoreion, are from as early as the 6th century BCE. Aqueducts would bring fresh water to cities and to the countryside for irrigation from faraway rivers. The longest known aqueduct from antiquity is the Aqueduct of Valens, built in Constantinopolis in the 3rd to 4th century CE and brought water from over 250 kilometers away. The entire structure was over 400 kilometers in length."
 port_building: "Port"
 port_building_desc: "Quickly and reliably docking and launching ships was best attempted in naturally sheltered harbors, the presence of which spelled the success of many ancient cities along the Mediterranean coast. However, man-made harbors were also constructed when the need arose, utilizing moles and seawalls to tame the waves. Perhaps the most famous of these is the great Portus of Ostia which supplied Rome with grain despite the strong winds at the Tiber's mouth, though they became increasingly common throughout the empire."
 latifundia_building: "Slave Estate"
 latifundia_building_desc: "In the ancient world, citizenship and military service was tied to land ownership. Only land owners had the privilege of suffrage, and a duty to perform military service. Over time, more and more land was bought by the more affluent classes, and gathered farmland into larger estates, in Latin called Latifundia. These estates were worked by slaves, and grew primarily cash crops, which were more valuable than food."
 slave_mine_building: "Mine"
 slave_mine_building_desc: "Mining has been part of human civilization for millennia. Mines allow for more effective ore removal than surface mining, as one can reach deeper ore deposits with less effort. The oldest mining complex in the world is believed to be in Nazlet Sabaha, north of Luxor, along the banks of the Nile, which is believed to have been dug 50,000 years ago."
 basic_settlement_infratructure_building: "Farming Settlement"
 basic_settlement_infratructure_building_desc: "After the appearance of agriculture, somewhere between 11,000 and 9,500 BCE, the first large-scale farming settlements appeared in the Fertile Crescent around 9,000 BCE. The common pooling of resources gave human societies the freedom to specialize, and branch out into other areas of production, like smithing, carpentry, and trading, but also prefaced the growth of arts and culture, such as poetry, theater, and learning. A strong agricultural surplus is essential to the development of human civilization."
 hill_fort: "Tribal Settlement"
 hill_fort_desc: "Tribal communities are close-knit rural groups of fiercely independent people. In the early history of Rome, a tribe, or a Tribus, originally referred to such subgroups, which became the basis for the voting classes of the Populus when the city was founded. Even though the rural lifestyle disappeared, Romans retained their tribal-mentality long after they became urban, and were slow to adopt foreign customs and traditions."
 local_forum_building: "Provincial Legation"
 local_forum_building_desc: "In Republican Rome conquered territory was divided into provinces, and administration of the provinces was left in the hands of Roman magistrates with Imperium. Generally these provinces had a high level of self-governance, and the governor only intervened in matters that directly pertained to the Roman state, such as taxation and presiding over judicial trials involving Roman citizens. One of the symbols of a magistrate's Imperium was the curule chair, which could be folded up and transported to wherever the magistrate was needed to perform his duties."
 barracks_building: "Barracks"
 barracks_building_desc: "While on the march, Roman legions would build semi-fortified camps called Castra. These were little more than palisades around their camps with a moat dug out. They would be dismantled every morning, and rebuilt in a new location in the evening. When the legion built winter quarters, the Castra would be upgraded with better fortifications and more amenities. Frequently in the more remote provinces, as a permanent military presence was established, the palisades and tents of the winter quarters would be replaced with stone buildings to house the provincial legions assigned to the governor."
 COLONIZE_TITLE: "Colonize $PROV$"
 RECOMMENDED: "Recommended Nations"
 MIGRATORY_NATIONS: "Migrating Nations"
 conquer_wargoal: "Conquer"
 independence_wargoal: "Independence"
 naval_wargoal: "Naval Superiority"
 LAUNCHER_SAVE_DESCRIPTION: "Playing as [COUNTRY.GetNameWithNoTooltip] - [GetDateString]"
 LAUNCHER_SAVE_DESCRIPTION_OBSERVER: "Observing [COUNTRY.GetNameWithNoTooltip] - [GetDateString]"
 LOAD_GAME_FAILED_TITLE: "Failed to load savegame"
 LOAD_GAME_FAILED_DESC: "The savegame could not be loaded, this could be due to:\n- Savegame was made with an incompatible version of the game\n- Savegame uses a different set of DLCs or Mods\n- Save file is corrupted"
 CLOUD_SAVE_IN_PROGRESS_TOOLTIP: "Cloud saves synchronization is in progress..."
 QUIT_TO_DESKTOP_CONFIRMATION_WITH_CLOUD_DESC: "Are you sure you want to Exit to Desktop?\nAny unsaved progress will be lost.\nCloud save synchronization is in progress.\nIf you exit now save data may be lost or missing from the cloud."
 DEMOTION_TITLE: "Demotion"
 PROMOTION_TITLE: "Promotion"
 CHARACTER_KINSWOMAN: "kinswoman"
 CHARACTER_KINSMAN: "kinsman"
 CHARACTER_GRANDMOTHER: "grandmother"
 CHARACTER_GRANDFATHER: "grandfather"
 CHARACTER_GRANDDAUGHTER: "granddaughter"
 CHARACTER_GRANDSON: "grandson"
 CHARACTER_FAMILY_MEMBER: "family member"
 CLICK_TO_VIEW: "#I Click to view#!"
 SCOPE_DEBUG_LEGION: "Legion [LEGION.GetName] [LEGION.GetID]"
 TOGGLE_DECISION_ALERT_TT: "Toggle alert for decision."
 INVALID_LEGION: "Invalid Legion"
 SHIPS_LOST_THIS_COMBAT: "#T Ships Lost#!\nThe number of ships this side has lost in this combat."
 PER_POINT_DESC: "Multiplied by"
 ASSIGNING_OFFICER_WILL: "Assigning an Officer will grant"
 SELECT_PROVINCE_TOOLTIP: "[Province.GetName|T]\nRank: [Province.GetRank.GetName]\nPopulation: [Province.GetPopulation('total')|Y]\nTrade Goods: [Province.GetTradeGoods.GetName]"
 MEMBER_OF_FAMILY_PORTRAIT_TOOLTIP: "#T Great Family#!\n[Character.GetPraenomen] is a member of the [Character.GetFamily.GetName] family.\nThey currently have #Y [Character.GetFamily.GetNumberOfJobs]/[Character.GetFamily.GetNumberOfExpectedJobs]#! expected jobs in [Character.GetEmployer.GetName]."
 HEAD_OF_FAMILY_PORTRAIT_TOOLTIP: "#T Head of Great Family#!\n[Character.GetPraenomen] is the head of the [Character.GetFamily.GetName] family.\nThey currently have #Y [Character.GetFamily.GetNumberOfJobs]/[Character.GetFamily.GetNumberOfExpectedJobs]#! expected jobs in [Character.GetEmployer.GetName]."
 TERRITORIES_IN_STATE: "Territories in Province"
 TOGGLE_LIST_PROVINCES: "#T Territories in Province#!\n#G Click to toggle Territory List.#!"
