l_english:
 appoint_dictator: "Wyznacz dyktatora"
 appoint_dictator_past: "Wyznaczono dyktatora"
 appoint_dictator_act: "Wyznacz dyktatora"
 appoint_dictator_act_past: "Wyznaczono dyktatora"
 appoint_dictator_effect_tooltip: "[actor.GetRulerTitle|Y] [target.GetName|Y] zyska nadzwyczajne uprawnienia, dopóki nie nastanie pokój. Dyktatura oznacza, że [SCOPE.sC('actor').Custom('get_court_type')] poprze większość twoich działań a okres tymczasowego przedłużenia władzy zostanie dodany do bieżącej kadencji, którą posiada [SCOPE.sC('actor').GetRulerTitle|Y]."
 ca_convert_religion: "Wymuś nawrócenie"
 ca_convert_religion_past: "Wymuszono nawrócenie"
 ca_convert_religion_act: "Wymuś nawrócenie"
 ca_convert_religion_act_past: "Wymuszono nawrócenie"
 ca_convert_religion_tooltip_republic: "Siła modyfikatora #Y niedawno nawrócony#! zależy od #Y gorliwości#! twojego [GetOffice('office_pontifex').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], w porównaniu z celem."
 ca_convert_religion_tooltip_monarchy: "Siła modyfikatora #Y niedawno nawrócony#! zależy od #Y gorliwości#! twojego [GetOffice('office_high_priest_monarchy').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], w porównaniu z celem."
 ca_convert_religion_tooltip_tribal: "Siła modyfikatora #Y niedawno nawrócony#! zależy od #Y gorliwości#! twojego [GetOffice('office_high_priest').GetCulturalName(SCOPE.sChar('target').GetCharacter.GetCountry)], w porównaniu z celem."
 adopt_to_family: "Adoptuj"
 adopt_to_family_past: "$CHAR$ został zaadoptowany przez rodzinę królewską."
 adopt_to_family_act: "Adoptuj $CHAR$ przez rodzinę królewską."
 adopt_to_family_act_past: "$CHAR$ został(a) zaadoptowany/a przez rodzinę królewską kraju $COUNTRY$"
 adoption_explanation_tooltip: "Jeśli [SCOPE.sChar('target').GetName|Y] stanie się częścią naszej starożytnej #Y rodziny#! zmniejszymy nasz #Y prestiż#! i reputację pośród innych rodzin w naszym kraju.\n\n"
 bastard_adoption_tooltip: "Jako że [SCOPE.sChar('target').GetPraenomen] to [SCOPE.sChar('target').GetDaughterSon|Y] postaci [SCOPE.sC('actor').GetRuler.GetPraenomen], koszt adopcji jest zmniejszony.\n\n"
 sibling_adoption_tooltip: "Jako że [SCOPE.sChar('target').GetPraenomen] to [SCOPE.sChar('target').GetSisterBrother|Y] postaci [SCOPE.sC('actor').GetRuler.GetPraenomen], koszt adopcji jest zmniejszony.\n\n"
 friend_adoption_tooltip: "Jako że [SCOPE.sChar('target').GetPraenomen] to #Y przyjaciel#! postaci [SCOPE.sC('actor').GetRuler.GetPraenomen], koszt adopcji jest zmniejszony.\n\n"
 lover_adoption_tooltip: "Jako że [SCOPE.sChar('target').GetPraenomen] ma dzieci pozamałżeńskie z postacią [SCOPE.sC('actor').GetRuler.GetPraenomen], koszt [Select_CString(target.IsFemale, 'jej', 'jego' )] adopcji jest znacznie zwiększony.\n\n"
 adoption_explanation_event_tooltip: "Jeśli [THIS.GetCharacter.GetName|Y] stanie się częścią naszej starożytnej #Y rodziny#! zmniejszymy nasz #Y prestiż#! i reputację pośród innych rodzin w naszym kraju.\n\n"
 bastard_adoption_event_tooltip: "Jako że [THIS.GetCharacter.GetName|Y] to [THIS.GetCharacter.GetDaughterSon|Y] postaci [GetRootScope.GetCharacter.GetName|Y], koszt prestiżu za adopcję jest zmniejszony.\n\n"
 sibling_adoption_event_tooltip: "Jako że [THIS.GetCharacter.GetName|Y] to [THIS.GetCharacter.GetSisterBrother|Y] postaci [GetRootScope.GetCharacter.GetName|Y], koszt prestiżu za adopcję jest zmniejszony.\n\n"
 friend_adoption_event_tooltip: "Jako że [THIS.GetCharacter.GetName|Y] to bliski przyjaciel postaci [GetRootScope.GetCharacter.GetName|Y], koszt prestiżu za adopcję jest zmniejszony.\n\n"
 lover_adoption_event_tooltip: "Jako że [THIS.GetCharacter.GetName|Y] ma dzieci pozamałżeńskie z postacią [GetRootScope.GetCharacter.GetName|Y], koszt prestiżu za [Select_CString(THIS.IsFemale, 'jej', 'jego' )] adopcję jest znacznie zwiększony.\n\n"
 adoption_explanation_from_ruler_tooltip: "Efekty te będą łagodniejsze w przypadku adopcji przyjaciół, dzieci lub rodzeństwa postaci, którą jest [actor.GetRulerTitle|Y], a surowsze w przypadku adopcji związków pozamałżeńskich."
 adoption_prestige_tt: "Przyjęcie tej postaci do naszej #Y rodziny#! #R zmniejszy#! jej prestiż @prestige!"
 adoption_legitimacy_tt: "[actor.GetName] #R straci#! również legitymizację @legitimacy!"
 bastard_adoption_from_ruler_tooltip: "Jako że [SCOPE.sChar('target').GetName|Y] to [SCOPE.sChar('target').GetDaughterSon|Y] postaci [SCOPE.sC('actor').GetRuler.GetName|Y] koszt prestiżu za adopcję jest zmniejszony.\n\n"
 sibling_adoption_from_ruler_tooltip: "Jako że [SCOPE.sChar('target').GetName|Y] to [SCOPE.sChar('target').GetSisterBrother|Y] postaci [SCOPE.sC('actor').GetRuler.GetName|Y] koszt prestiżu za adopcję jest zmniejszony.\n\n"
 friend_adoption_from_ruler_tooltip: "Jako że [SCOPE.sChar('target').GetName|Y] to bliski przyjaciel postaci [SCOPE.sC('actor').GetRuler.GetName|Y] koszt prestiżu za adopcję jest zmniejszony.\n\n"
 lover_adoption_from_ruler_tooltip: "Jako że [SCOPE.sChar('target').GetName|Y] ma dzieci pozamałżeńskie z postacią [SCOPE.sC('actor').GetRuler.GetName|Y], koszt [Select_CString(target.IsFemale, 'jej', 'jego' )] adopcji jest znacznie zwiększony.\n\n"
 adoption: "Zorganizuj adopcję"
 adoption_past: "Zorganizowano adopcję"
 adoption_act: "$CHAR$ zaadoptuje nowego członka rodziny"
 adoption_select_title: "Adopcja przez rodzinę $CHAR$"
 adoption_act_past: "Rodzina $CHAR$ zaadoptowała [SCOPE.sChar('recipient').GetName]."
 seize_property: "Wyjmij spod prawa"
 seize_property_past: "Wyjęto spod prawa $CHAR$"
 seize_property_act: "Wyjmij spod prawa $CHAR$"
 seize_property_act_past: "Kraj $COUNTRY$ wyjął spod prawa $CHAR$"
 seize_property_relatives_tooltip: "Każdy członek rodziny #Y [SCOPE.sChar('target').GetName]#! utraci #Y 20#! lojalności."
 family_fallen_from_grace: "Rodzina '[target.GetFamily.GetName|Y]' #R przestanie#! być uważana za wielką rodzinę, wszystkie posiadłości rodziny zostaną przejęte, każdy były jej członek ([SCOPE.ScriptValue('seize_property_svalue')|Y0]) straci #R 40#! lojalności@loyalty_icon!na okres #Y 240 miesięcy#!."
 family_holdings_gone_tt: "Wszystkie posiadłości rodziny '[target.GetFamily.GetName|Y]' zostaną skonfiskowane przez państwo."
 was_once_great: "W niełasce"
 desc_was_once_great: "Ta postać była kiedyś członkiem jednej z wielkich rodzin kraju, ale gdy rodzina ta popadła w niełaskę, straciła większość zarówno wpływów, jak i władzy. Do pewnego stopnia prześladują ich wspomnienia z przeszłości."
 unappoint_dictator: "Zwróć dyktaturę"
 unappoint_dictator_effect_tooltip: "[Select_CString(actor.IsFemale, 'Twoja', 'Twój' )][SCOPE.sC('actor').GetRulerTitle|Y] [Select_CString(actor.IsFemale, 'zostanie zmuszona', 'zostanie zmuszony' )] do zwrócenia władzy dyktatorskiej [actor.Custom('get_court_type_pl_CEL')]."
 unappoint_dictator_act: "Zwróć władzę senatowi"
 unappoint_dictator_act_past: "Zwrócono władzę senatowi"
 not_giving_up_power: "Nie możesz zwrócić władzy dyktatorskiej, ponieważ postać ta odmówiła jej zwrotu."
 not_dictator_any_more: "@trigger_no! Nowy lider u władzy."
 dictator_leaves_tt: "Zrzeczenie się władzy dyktatorskiej:"
 stop_seeking_treatment: "Zaprzestań szukania leczenia"
 stop_seeking_treatment_past: "Zaprzestano szukania leczenia dolegliwości."
 stop_seeking_treatment_act: "Zaprzestań szukania leczenia dolegliwości."
 stop_seeking_treatment_act_past: "Zaprzestano szukania leczenia dolegliwości."
 hold_triumph: "Zorganizuj triumf"
 hold_triumph_past: "Zorganizowano triumf!"
 hold_triumph_act: "Zorganizuj triumf dla $CHAR$"
 hold_triumph_act_past: "W kraju $COUNTRY$ zorganizowano chwalebny i ekstrawagancki triumf dla $CHAR$."
 TRIUMPH_RECENTLY_HELD: "[SCOPE.sCountry('actor').GetName|Y] niedawno [Select_CString(actor.IsFemale, 'otrzymała', 'otrzymał' )] triumf i nie może otrzymać kolejnego do [SCOPE.sCountry('actor').GetVariableExpiry('triumph_recently_held')|Y].\n"
 triumph_l_tt: "[target.GetName] #Y straci dowództwo#! oraz zyska #G 20#! lojalności@loyalty_icon!na #Y 120 miesięcy#! i #G 25#! popularności @popularity_icon!"
 bribe_character: "Przekup"
 bribe_character_past: "Postać przekupiona!"
 bribe_character_act: "Przekup $CHAR$, aby zwiększyć lojalność tej osoby"
 bribe_character_act_past: "Kraj $COUNTRY$ sprawił, że $CHAR$ jest o wiele bardziej lojalny(a)."
 BRIBED_RECENTLY: "[SCOPE.sChar('target').GetName] [Select_CString(target.IsFemale, 'została', 'został' )] niedawno [Select_CString(target.IsFemale, 'przekupiona', 'przekupiony' )] i odmówi dalszego zaangażowania do [SCOPE.sChar('target').GetVariableExpiry('ca_character_bribed')|Y]\n"
 bribe_actor_tt: "[actor.GetRuler.GetName] zapłaci #R 100#!@gold! ze swojego osobistego majątku i zyska #R 1#! korupcji @corruption_icon!"
 bribe_target_tt: "[target.GetName] zyska #G 100#!@gold!, #G 15#! lojalności@loyalty_icon!na #Y 48 miesięcy#! i #R 5#! korupcji @corruption_icon!"
 arrange_marriage: "Zaaranżuj mariaż"
 arrange_marriage_past: "Zaaranżowano mariaż"
 arrange_marriage_act: "Znajdź małżonka/ę dla $CHAR$"
 arrange_marriage_select_title: "Zaaranżuj mariaż dla $CHAR$"
 arrange_marriage_act_past: "$CHAR$ zawarł(a) mariaż z [SCOPE.sChar('recipient').GetName]."
 arrange_marriage_tt: "[target.GetPraenomen] poślubi wybranego kandydata z [actor.GetName]"
 arrange_marriage_consort_tt: "W monarchiach współmałżonek przyczynia się do zwiększenia tych umiejętności rządu, które ma wyższe niż władca-współmałżonek."
 SELECT_TARGET: "Wybierz"
 marry_ruler: "Zaaranżuj mariaż z władcą"
 marry_ruler_past: "Mariaż władcy!"
 marry_ruler_act: "Mariaż!"
 marry_ruler_act_past: "$CHAR$ zawarł(a) mariaż z [SCOPE.sCountry('actor').GetRuler.GetName]."
 inspire_disloyalty: "Zachęcaj do nielojalności"
 inspire_disloyalty_past: "Postać stałą się bardziej nielojalna!"
 inspire_disloyalty_act: "Zachęć $CHAR$ do być mniej lojalnym"
 inspire_disloyalty_act_past: "Kraj $COUNTRY$ sprawił, że $CHAR$ jest nieco mniej lojalny(a)."
 not_already_inspiring: "Możesz tylko zachęcać do nielojalności tylko #Y 1#! postać na raz."
 recruit: "Zrekrutuj"
 recruit_past: "Postać zrekrutowana!"
 recruit_act: "Zrekrutuj $CHAR$ do służby nam!"
 recruit_act_past: "Kraj $COUNTRY$ zrekrutował $CHAR$ do służby im."
 recruit_allow_tt: "Nie jest w związku małżeńskim z władcą ani ważną postacią [target.GetEmployer.GetAdjective]."
 recruit_general: "Pozyskaj generała"
 recruit_general_past: "Generał pozyskany!"
 recruit_general_act: "Pozyskaj $CHAR$ do służby nam!"
 recruit_general_act_past: "Kraj $COUNTRY$ pozyskał $CHAR$ do służby im."
 recruit_general_tt: "[target.GetName] oraz [target.GetHerHis] [legion|El] przejdą na naszą stronę."
 secude_governor: "Przekonaj gubernatora"
 secude_governor_past: "Gubernator przekonany!"
 secude_governor_act: "Przekonaj $CHAR$ do błędu"
 secude_governor_act_past: "Kraj $COUNTRY$ przekonał $CHAR$ do błędu!"
 seduce_governor_tooltip: "Oferta została wysłana do #Y [SCOPE.sChar('target').GetName]#!!"
 smear_character: "Sabotuj reputację"
 smear_character_past: "Postać oczerniona"
 smear_character_past_failed: "Nieskazitelna postać!"
 smear_character_act: "Sabotuj reputację $CHAR$"
 smear_character_act_past: "Kraj $COUNTRY$ z powodzeniem sabotuje reputację $CHAR$."
 ca_character_loan: "Zażądaj pożyczki"
 ca_character_loan_past: "Zażądano pożyczki."
 ca_character_loan_act: "Zażądaj pieniędzy od $CHAR$"
 ca_character_loan_act_past: "Kraj $COUNTRY$ zażądał pieniędzy od $CHAR$"
 ca_character_loan_repay: "Spłać pożyczkę"
 ca_character_loan_repay_past: "Spłacono pożyczkę."
 ca_character_loan_repay_act: "Spłać pożyczkę od $CHAR$"
 ca_character_loan_repay_act_past: "Kraj $COUNTRY$ spłacił pożyczkę od $CHAR$"
 banish_char: "Wygnaj"
 banish_char_past: "Postać wygnana!"
 banish_char_act: "Wygnaj $CHAR$"
 banish_char_act_past: "Kraj $COUNTRY$ wygnał $CHAR$!"
 banish_effect_tt: "[SCOPE.sChar('target').GetName] zostanie [Select_CString(target.IsFemale, 'wygnana', 'wygnany' )] do wybranego kraju."
 banish_char_select_title: "Wybierz cel wygnania"
 sacrifice_prisoner: "Złóż w ofierze"
 sacrifice_prisoner_past: "Postać złożona w ofierze!"
 sacrifice_prisoner_act: "Złóż w ofierze $CHAR$"
 sacrifice_prisoner_act_past: "Kraj $COUNTRY$ złożył w ofierze $CHAR$"
 sacrifice_tooltip: "Utracona #Y centralizacja#! @centralization! stanowi dziesiątą część #Y wojowniczości#! @military_icon! postaci."
 execute_character: "Strać"
 execute_character_past: "Postać stracona!"
 execute_character_act: "Strać $CHAR$"
 execute_character_act_past: "Kraj $COUNTRY$ stracił $CHAR$."
 support_primary_heir: "Zażądaj poparcia dla następcy"
 support_primary_heir_past: "$CHAR$ został(a) zachęcony/a do poparcia głównego następcy!"
 support_primary_heir_act: "Zachęć $CHAR$ do poparcia głównego następcy!"
 support_primary_heir_act_past: "$CHAR$ teraz wyraźnie widzi, kto jest następcą tronu kraju $COUNTRY$."
 free_hands: "Daj wolną rękę"
 free_hands_past: "Gubernator otrzymał wolną rękę!"
 free_hands_act: "Daj $CHAR$ wolną rękę"
 free_hands_act_past: "Patrz w inną stronę, podczas gdy $CHAR$ w pełni wykorzystuje swoją pozycję."
 free_hands_tooltip: "Nie będzie można cofnąć #Y wolnej ręki#! udzielonej tej postaci przez #Y 2#! lata, a później będzie to kosztować #R 15#! lojalności@loyalty_icon!"
 free_hands_cooldown_tooltip: "Nie możesz cofnąć #Y wolnej ręki#!, dopóki nie miną #Y 2#! lata od jej przyznania."
 tie_hands: "Cofnij wolną rękę"
 tie_hands_past: "Cofnięto wolną rękę"
 tie_hands_act: "Cofnij wolną rękę"
 tie_hands_act_past: "Cofnięto wolną rękę"
 tie_hands_tooltip: "Jeśli ta postać straci pracę lub zostanie usunięta z urzędu z aktywną wolną ręką, zostanie usunięta i straci #R 20#! lojalności."
 ransom_prisoner: "Wykup więźnia"
 ransom_prisoner_past: "Postać wykupiona z więzienia!"
 ransom_prisoner_act: "Wykup $CHAR$ z obcego więzienia"
 ransom_prisoner_act_past: "Kraj $COUNTRY$ wykupił $CHAR$ z obcego więzienia"
 ransom_prisoner_tooltip: "Rozpocznij negocjacje dotyczące wykupienia #Y [SCOPE.sChar('target').GetName]#! z niewoli."
 release_prisoner: "Uwolnij więźnia"
 release_prisoner_past: "Postać uwolniona z więzienia!"
 release_prisoner_act: "Uwolnij $CHAR$ z więzienia"
 release_prisoner_act_past: "Kraj $COUNTRY$ uwolnił $CHAR$ z więzienia."
 release_prisoner_tooltip: "Jeśli [target.GetName] jest z [actor.GetName] lub ojczyzna tej postaci nie istnieje, zostanie tutaj."
 imprison: "Uwięź"
 imprison_past: "Postać uwięziona"
 imprison_act: "Uwięź $CHAR$"
 imprison_act_past: "Uwięziono $CHAR$."
 imprison_party_leader_tooltip: "Uwięzienie #Y przywódcy frakcji#! lub #Y głowy rodziny#! zdestabilizuje twój kraj!"
 assassinate: "Zaplanuj zagraniczne morderstwo"
 assassinate_past: "Zaplanowano zagraniczne morderstwo!"
 assassinate_act: "Próba zamordowania zagranicznej postaci"
 assassinate_act_past: "Kraj $COUNTRY$ zaczął planować morderstwo $CHAR$!"
 assassinate_scheme: "Plan: Morderstwo"
 assassinate_scheme_past: "Zaplanowane morderstwo"
 assassinate_scheme_act: "Próba zamordowania rywala postaci $CHAR$"
 assassinate_scheme_act_past: "$CHAR$ podejmuje próbę zamordowania rywala"
 assassinate_scheme_select_title: "Wybierz cel"
 employer_is_target_employer_tt: "[SCOPE.sC('actor').GetRuler.GetName] ma co najmniej jednego #Y przyjaciela#! w #Y [SCOPE.sChar('target').GetEmployer.GetName]#! (nie może być #Y bliskim krewnym#! postaci [target.GetName], #Y dowódcą straży#! lub #Y strażnikiem przybocznym#!."
 assassinate_attempt_effect_tooltip: "Nasi agenci zaczną planować morderstwo #Y [SCOPE.sChar('target').GetName]#!!"
 only_one_assassination: "Możesz zaplanować tylko jedno morderstwo na raz."
 assassinate_internal_rival_tt: "[target.GetName] ma co najmniej jednego rywala w [actor.GetName]."
 assassinate_internal_scheme_tt: "[target.GetName] nie planuje obecnie morderstwa."
 scheme_assassinate_tt: "[actor.GetRuler.GetPraenomen] podejmie próbę zamordowania wybranego rywala."
 assassinate_scheme_other: "Zamorduj rywala"
 assassinate_scheme_other_past: "Zaplanowano zamordowanie postaci $CHAR$"
 assassinate_scheme_other_act: "Próba zamordowania postaci $CHAR$"
 assassinate_scheme_other_act_past: "Podjęto próbę zamordowania postaci $CHAR$"
 scheme_assassinate_other_tt: "[actor.GetRuler.GetPraenomen] podejmie próbę zamordowania postaci [target.GetPraenomen]"
 assassinate_own_ruler: "Zamorduj dyktatora"
 assassinate_own_ruler_past: "Dyktator zamordowany"
 assassinate_own_ruler_past_failed: "Dyktator uniknął zamordowania!"
 assassinate_own_ruler_act: "Próba zamordowania naszego dyktatora"
 assassinate_own_ruler_act_past: "W kraju $COUNTRY$ zamordowano własnego dyktatora."
 imprison_republic_trial: "Oskarż o przestępstwo"
 imprison_republic_trial_act: "Oskarż o przestępstwo"
 BASE_CHANCE_CI: "Podstawa: $VAL|+=$"
 CI_CHANCE_FINESSE: "Finezja $CHAR|Y$: $VAL|+=$"
 WE: "My"
 CHAR_INTERACTION_SETUP: "Kiedy dokonamy interakcji z postaciami."
 CHAR_INTERACTION_HEADER: ""
 CHAR_INTERACTION_1: "$TITLE$"
 CHAR_INTERACTION_2: "$DESC$"
 CHAR_INTERACTION_3: ""
 CHAR_INTERACTION_4: "$EFECT$"
 CHAR_INTERACTION_5: ""
 CHAR_INTERACTION_6: ""
 CHAR_INTERACTION_LOG: "$DESC$"
 CHAR_INTERACTION_BTN1: "OK"
 CHAR_INTERACTION_BTN2: "OK"
 CHAR_INTERACTION_BTN3: "Idź do"
 CHAR_INTERACTION_MAP: ""
 CHAR_INTERACTION_ON_US_SETUP: "Kiedy inny kraj dokonuje interakcji postaci z naszymi postaciami."
 CHAR_INTERACTION_ON_US_HEADER: ""
 CHAR_INTERACTION_ON_US_1: "$TITLE$"
 CHAR_INTERACTION_ON_US_2: "$DESC$"
 CHAR_INTERACTION_ON_US_3: ""
 CHAR_INTERACTION_ON_US_4: "$EFECT$"
 CHAR_INTERACTION_ON_US_5: "$DETAILS$"
 CHAR_INTERACTION_ON_US_6: "$FAMILY$"
 CHAR_INTERACTION_ON_US_LOG: "$DESC$"
 CHAR_INTERACTION_ON_US_BTN1: "OK"
 CHAR_INTERACTION_ON_US_BTN2: "OK"
 CHAR_INTERACTION_ON_US_BTN3: "Idź do"
 CHAR_INTERACTION_ON_US_MAP: ""
 based_on_character_wealth_tooltip: "Koszt tej interakcji zależy od bogactwa postaci docelowej."
 get_treatable_disease_tooltip: "[target.GetName] rozpocznie starania, aby #Y $scheme_seek_treatment$#! dla swojej choroby - #Y [SCOPE.sChar('target').Custom('get_treatable_disease')]#!."
 seek_treatment: "Plan: Znalezienie leczenia"
 seek_treatment_past: "Szukano leczenia dolegliwości."
 seek_treatment_act: "Szukaj leczenia dla $CHAR$."
 seek_treatment_act_past: "Szukano leczenia dla $CHAR$."
 hold_games: "Zorganizuj igrzyska"
 hold_games_act: "Zorganizuj igrzyska dla ludu"
 hold_games_past: "Zorganizowano igrzyska"
 hold_games_act_past: "Kraj $COUNTRY$ zorganizował igrzyska."
 GAMES_RECENTLY_HELD: "@trigger_no![SCOPE.sCountry('actor').GetName|Y] zorganizował ostatnio igrzyska i nie może zorganizować ich więcej do [SCOPE.sCountry('actor').GetVariableExpiry('games_recently_held')|Y]\n"
 hold_games_scheme_select_title: "$hold_games$"
 grant_citizenship: "Przyznaj obywatelstwo"
 grant_citizenship_act: "Przyznaj obywatelstwo $CHAR$."
 grant_citizenship_past: "Przyznano obywatelstwo $CHAR$."
 grant_citizenship_act_past: "Przyznano obywatelstwo $CHAR$."
 royal_marriage_acceptance_tooltip_base: "        Minimalna wartość: #Y 20#!"
 royal_marriage_acceptance_tooltip_legitimacy: "        #R +[SCOPE.ScriptValue('royal_marriage_acceptance_vs_legitimacy')]#! [SCOPE.sC('actor').GetAdjective] legitymizacja (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_our_legitimacy')]#!) w porównaniu z [SCOPE.sChar('target').GetEmployer.GetAdjective] legitymizacją (#Y [SCOPE.ScriptValue('royal_marriage_acceptance_their_legitimacy')]#!)"
 royal_marriage_acceptance_tooltip_larger: "        #R +20#! [SCOPE.sChar('target').GetEmployer.GetName] jest potężniejszy od nas"
 has_valid_marriage_candidate_female: "#Y [SCOPE.sC('actor').GetName]#! ma niezamężną, dorosłą kobietę będącą członkiem dynastii."
 has_valid_marriage_candidate_male: "#Y [SCOPE.sC('actor').GetName]#! ma niezamężnego, dorosłego, męskiego członka dynastii."
 royal_marriage_tooltip_candidate_a: "Propozycja mariażu między #Y [SCOPE.sChar('royal_marriage_candidate').GetName]#! a #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_b: "Propozycja mariażu między #Y [SCOPE.sChar('royal_marriage_candidate_2').GetName]#! a #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage_tooltip_candidate_c: "Propozycja mariażu między #Y [SCOPE.sChar('royal_marriage_candidate_3').GetName]#! a #Y [SCOPE.sChar('target').GetName]#!."
 royal_marriage.1.t: "Królewski mariaż"
 royal_marriage.1.desc: "W interesie przyszłej współpracy powinniśmy zdecydować, kto z naszego królewskiego rodu mógłby być kandydatem do mariażu z [SCOPE.sChar('target').GetName] z królewskiego rodu [SCOPE.sChar('target').GetEmployer.GetName]."
 royal_marriage.1.a: "[SCOPE.sChar('royal_marriage_candidate').GetPraenomen] jest oczywistym wyborem."
 royal_marriage.1.b: "Wyślij [SCOPE.sChar('royal_marriage_candidate_2').GetPraenomen]."
 royal_marriage.1.c: "Zasugeruj [SCOPE.sChar('royal_marriage_candidate_3').GetPraenomen]."
 royal_marriage.1.d: "Być może jest to nierozsądne."
 female_moves_to_tooltip: "#Y [SCOPE.sChar('female_marriage_candidate').GetName]#! przeniesie się do #Y [SCOPE.sChar('male_marriage_candidate').GetEmployer.GetName]#!, aby być ze swoim mężem."
 royal_marriage.2.t: "Propozycja mariażu"
 royal_marriage.2.desc: "Rodzina królewska [SCOPE.sC('proposer_country').GetAdjective] wysyła ciekawą ofertę. Sugerują, że strategiczny mariaż między [SCOPE.sChar('recipient').GetName] a [SCOPE.sChar('target').GetName] może znacznie przyczynić się do poprawy naszych stosunków dyplomatycznych.\n\nNie trzeba dodawać, że wiąże się to z pewnym ryzykiem; integralność naszego królewskiego rodu jest sprawą najwyższej wagi, jednak możliwości, jakie może ono przynieść, nie powinny być odrzucane tak pochopnie."
 royal_marriage.2.a: "Radujmy się wszyscy!"
 royal_marriage.2.b: "Okropny plan."
 royal_marriage.2.c: "To po prostu nie jest wykonalne."
 royal_marriage.3.t: "Mariaż odrzucony"
 royal_marriage.3.desc: "Z niezależnych od nich przyczyn, dwór [SCOPE.sC('receiver_country').GetAdjective] nie może zatwierdzić naszej prośby o mariaż."
 royal_marriage.3.a: "Rozczarowujące."
 royal_marriage.4.t: "Odmowa mariażu"
 royal_marriage.4.desc: "Niewdzięczne kundle z [SCOPE.sC('receiver_country').GetAdjective] odrzuciły naszą hojną ofertę ślubu z naszym królewskim rodem.\n\nNasz lud zapamięta tę zniewagę!"
 royal_marriage.4.a: "Rozczarowujące."
 royal_marriage.5.t: "Mariaż zaakceptowany!"
 royal_marriage.5.desc: "Ród [SCOPE.sC('receiver_country').GetAdjective] łaskawie przyjął naszą ofertę królewskiego mariażu. [SCOPE.sChar('female_marriage_candidate').GetName] wyjechała do [SCOPE.sChar('male_marriage_candidate').GetEmployer.GetName] aby spotkać się z narzeczonym, [SCOPE.sChar('male_marriage_candidate').GetName].\n\nNiech nasze narody prosperują dzięki wzajemnemu okazywaniu uczuć."
 royal_marriage.5.a: "Wspaniale!"
 current_marriage_proposal: "Nie możesz brać udziału w bieżących negocjacjach małżeńskich."
 female_shall_move_tooltip: "Kobieta, która wychodzi za mąż, zawsze przenosi się do kraju męża.\n\nDzieci pobiorą się, gdy obie osoby przekroczą wiek #Y 16#! lat. Ich przyszłe zaręczyny zakończą się również, gdy jedna z postaci przeprowadzi się za granicę lub będzie szukać małżonka w inny sposób."
 propose_marriage: "Zaaranżuj królewski mariaż"
 propose_marriage_act: "Zaaranżuj małżeństwo między członkiem naszej dynastii a $CHAR$."
 propose_marriage_past: "Zaaranżowano królewski mariaż z $CHAR$."
 propose_marriage_act_past: "Zaaranżowano królewski mariaż pomiędzy [SCOPE.sChar('recipient').GetName] i $CHAR$."
 propose_marriage_select_title: "$propose_marriage_act$"
 betrothed_no_tt: "Nie jest zaręczona/y z członkiem dynastii panującej w innym kraju. ([target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetEmployer.GetName])"
 betrothed_broken_tt: "[target.GetPraenomen] nie będzie już rozpatrywana/y przy zawieraniu królewskiego mariażu z postacią [target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetName] z [target.MakeScope.GetVariable('betrothed_flag').GetCharacter.GetEmployer.GetName]"
 friend_progress_small: "Twój władca poczyni #Y mały#! postęp w zaprzyjaźnianiu się z [SCOPE.sChar('friend_target').GetName]."
 friend_progress_moderate: "Twój władca poczyni #Y umiarkowany#! postęp w zaprzyjaźnianiu się z [SCOPE.sChar('friend_target').GetName]."
 friend_progress_large: "Twój władca poczyni #Y wielki#! postęp w zaprzyjaźnianiu się z [SCOPE.sChar('friend_target').GetName]."
 currently_befriending_tooltip: "Już zaprzyjaźnia się z postacią"
 defriend: "Zakończ przyjaźń"
 defriend_act: "Zakończ przyjaźń z $CHAR$."
 defriend_act_past: "Zakończono przyjaźń z $CHAR$."
 defriend_past: "Zakończono przyjaźń z $CHAR$."
 befriend: "Zaprzyjaźnij się"
 befriend_act: "Spróbuj się zaprzyjaźnić z $CHAR$."
 befriend_act_past: "Spróbowano zaprzyjaźnić się z $CHAR$."
 befriend_past: "Spróbowano zaprzyjaźnić się z $CHAR$."
 stop_inspire_disloyalty: "Zaprzestań zachęcania do nielojalności"
 stop_inspire_disloyalty_act: "Zaprzestań zachęcania do nielojalności"
 stop_inspire_disloyalty_past: "Zaprzestano zachęcania do nielojalności"
 stop_inspire_disloyalty_act_past: "Zaprzestano zachęcania do nielojalności"
 stop_inspiring_disloyalty_tooltip: "Przestaniesz zachęcać do nielojalności obce postaci."
 adjacent_provinces_enticed: "[provinces|E] przylegające do naszego kraju, których lojalność jest niższa niż #Y 50#! @loyalty_icon!, zarządzane przez #Y [target.GetName]#! zostaną anektowane."
 province_claims_enticed: "#Y [SCOPE.sChar('target').GetEmployer.GetName]#! zyska #Y roszczenia#! do wszystkich przekazanych prowincji."
 inspire_cooldown_tooltip: "Nie możesz zaprzestać #Y zachęcania do nielojalności #! dopóki nie minęły #Y 2#! lata."
 inspire_cooldown_action_tooltip: "Nie będzie można zaprzestać #Y zachęcania do nielojalności#! dopóki nie miną #Y 2#! lata."
 already_inspiring_tooltip: "Już zachęcasz do nielojalności obcą postać!"
 rival_ruler: "Uczyń rywalem"
 rival_ruler_act: "Uczyń $CHAR$ rywalem"
 rival_ruler_past: "Uczyniono $CHAR$ rywalem"
 rival_ruler_act_past: "Uczyniono $CHAR$ rywalem"
 succession_crisis_make_mercenary: "Zachęć do zostania najemnikiem"
 succession_crisis_make_mercenary_act: "Zachęć $CHAR$ do zostania najemnikiem"
 succession_crisis_make_mercenary_act_past: "Zachęcono $CHAR$ do zostania najemnikiem"
 succession_crisis_make_mercenary_past: "Zachęcono $CHAR$ do zostania najemnikiem"
 deserters_already_encouraged_tooltip: "@trigger_no! Opcji \"zachęcaj do dezercji\" możesz użyć na następcy tylko raz na #Y 5#! lat.\n"
 unit_is_destroyed_tooltip: "Losowa podjednostka z armii #Y [SCOPE.sChar('target').GetName]#! zdezerteruje."
 succession_crisis_encourage_deserters: "Zachęcaj do dezercji"
 succession_crisis_encourage_deserters_act: "Zachęcaj do dezercji"
 succession_crisis_encourage_deserters_past: "Kraj $COUNTRY$ zachęcał armie do dezercji od $CHAR$"
 succession_crisis_encourage_deserters_act_past: "Kraj $COUNTRY$ zachęcał armie do dezercji od $CHAR$"
 recently_supported_sc_tooltip: "Można poprzeć pretendenta tylko raz na #Y 2#! lata."
 support_foreign_successor: "Interweniuj w kryzysie"
 support_foreign_successor_act: "Poprzyj postać $CHAR$ w wysiłkach zmierzających do obalenia jej władcy"
 support_foreign_successor_past: "Poparto pretendenta $CHAR$"
 support_foreign_successor_act_past: "Poparto postać $CHAR$ w wysiłkach zmierzających do obalenia jej władcy"
 coup_on_return_tooltip: "Jeśli zatrudnisz #Y [SCOPE.sChar('target').GetName]#!, w czasie gdy jest [SCOPE.sChar('target').GetSheHe] najemnikiem, prawdopodobnie spróbuje ponownie przejąć tron."
 seize_successor_assets: "Skonfiskuj majątek"
 seize_successor_assets_act: "Skonfiskuj majątek $CHAR$, podczas jego/jej nieobecności"
 seize_successor_assets_past: "Kraj $COUNTRY$ skonfiskował majątek $CHAR$"
 seize_successor_assets_act_past: "Kraj $COUNTRY$ skonfiskował majątek $CHAR$"
 derival_ruler: "Usuń rywala"
 derival_ruler_act: "Przestań postrzegać $CHAR$ jako rywala"
 derival_ruler_past: "Kraj $COUNTRY$ przestał postrzegać $CHAR$ jako rywala"
 derival_ruler_act_past: "Kraj $COUNTRY$ przestał postrzegać $CHAR$ jako rywala"
 stop_inspire_disloyalty_ruler: "Zaprzestań zachęcania do nielojalności"
 stop_inspire_disloyalty_ruler_act: "Zaprzestań zachęcania obcych frakcji do nielojalności."
 stop_inspire_disloyalty_ruler_past: "Zaprzestano zachęcania obcych frakcji do nielojalności."
 stop_inspire_disloyalty_ruler_act_past: "Kraj $COUNTRY$ zachęca obce frakcje do nielojalności."
 flog: "Rozkaż wychłostać"
 flog_act: "Rozkaż wychłostać $CHAR$"
 flog_past: "Kraj $COUNTRY$ rozkazał wychłostać $CHAR$"
 flog_act_past: "Kraj $COUNTRY$ rozkazał wychłostać $CHAR$"
 rivals_gain_loyalty_flogging: "#Y Wszyscy rywale [SCOPE.sChar('target').GetName]:#!"
 grant_clan_autonomy: "Przyznaj klanowi autonomię"
 grant_clan_autonomy_act: "Przyznaj $CHAR$ całkowitą autonomię"
 grant_clan_autonomy_act_past: "Przyznano $CHAR$ całkowitą autonomię"
 grant_clan_autonomy_past: "Kraj $COUNTRY$ przyznał $CHAR$ całkowitą autonomię"
 clan_chief_secedes: "#Y [SCOPE.sChar('target').GetName]#! odejdzie, aby przewodzić temu krajowi.\nJeżeli ma [SCOPE.sChar('target').GetSheHe] członków rodziny w #Y [SCOPE.sC('actor').GetName]#!, oni też odejdą."
 becomes_a_tributary_tt: "\nStaną się naszym #Y trybutariuszem#!."
 every_remaining_chief_tt: "\n\nKażdy pozostanie #Y wodzem klanu#!:"
 insulted_clan_chief: "Obrażony wódz klanu"
 desc_insulted_clan_chief: "Ten wódz klanu czuje się szczególnie obrażony po tym, jak wywyższyliśmy innego wodza."
 exalted_clan_chief: "Wywyższony wódz klanu"
 desc_exalted_clan_chief: "Ten wódz klanu czuje się wspaniałomyślnie po tym, jak go wywyższyliśmy."
 exalt_clan_chief: "Wywyższ wodza klanu"
 exalt_clan_chief_act: "Wywyższ $CHAR$"
 exalt_clan_chief_act_past: "Wywyższono $CHAR$"
 exalt_clan_chief_past: "Wywyższono $CHAR$"
 every_other_clan_chief: "\nKażdy inny #Y wódz klanu#! ([SCOPE.ScriptValue('exalt_chief_count')|0R]) traci #R 10#! lojalności@loyalty_icon!na #Y 60 miesięcy#! i #R 0.02#! miesięcznej popularności @popularity_icon! na #Y 60 miesięcy#!"
 no_other_clan_chief_modifier_tt: "@trigger_no! Żaden #Y wódz klanu#! nie ma modyfikatora #Y wywyższony wódz klanu#!."
 exalt_tt: "[target.GetName] zyskuje #G 20#! lojalności@loyalty_icon!na #Y 120 miesięcy#! i #G +0.5#! miesięcznej popularności @popularity_icon! na #Y 60 miesięcy#!"
 grant_laurels: "Przyznaj wyróżnienia kapitulacyjne"
 grant_laurels_act: "Przyznaj wyróżnienia kapitulacyjne $CHAR$"
 grant_laurels_past: "Przyznano wyróżnienia kapitulacyjne $CHAR$"
 grant_laurels_act_past: "Kraj $COUNTRY$ przyznał wyróżnienia kapitulacyjne $CHAR$"
 laurels_already_granted_tt: "Już przyznano wyróżnienia kapitulacyjne tej postaci"
 may_gain_nickname: "[target.GetSheHe|U] może zyskać #Y przydomek#!."
 may_gain_cognomen: "[target.GetSheHe|U] może zyskać #Y kognomen#!"
 laurels_effect_tt: "[target.GetName] zyska #G 60#! lojalności@loyalty_icon! na #Y 120 miesięcy#!, #G 20#! prominencji @prominence_icon! i #G 20#! popularności @popularity_icon!"
 tutor_heir: "Szkól dziecko"
 tutor_heir_act: "Wybierz nową ambicję dla królewskiego dziecka"
 tutor_heir_act_past: "Wybierz nową ambicję dla królewskiego potomstwa"
 tutor_heir_past: "Wybierz nową ambicję dla królewskiego potomstwa"
 tutor_heir_select_title: "Wybierz kandydata na nauczyciela"
 tutor_tt: ""
 tutored_already_tt: ""
 tutor_child: "Nauczaj"
 tutor_child_act: "Wybierz nową ambicję dla: $CHAR$"
 tutor_child_act_past: "Wybrano nową ambicję dla: $CHAR$"
 tutor_child_past: "Wybrano nową ambicję dla: $CHAR$"
 child_of_appropriate_age_tt: ""
 tutor_exists_tt: ""
 every_applicable_family_member_tt: "Każdy członek rodziny '[target.GetFamily.GetName|Y]' nadający się na urząd ([SCOPE.ScriptValue('stipends_char_count_svalue')|Y0]) zyskuje #R +50.0%#! miesięcznej płacy, #G +2.0#! @gold! na miesiąc i #G 20#! lojalności@loyalty_icon!przez okres #Y 60 miesięcy#!"
 grant_stipends: "Przyznaj uposażenie"
 grant_stipends_act: "Przyznaj uposażenie rodzinie $CHAR$"
 grant_stipends_act_past: "Kraj $COUNTRY$ przyznał uposażenie rodzinie $CHAR$"
 grant_stipends_past: "Przyznano uposażenie rodzinie $CHAR$"
 gladiatorial_debut: "Zaaranżuj debiut gladiatorski"
 gladiatorial_debut_act: "Zaaranżuj debiut gladiatorski"
 gladiatorial_debut_past: "Zaaranżowano debiut gladiatorski"
 gladiatorial_debut_act_past: "Zaaranżowano debiut gladiatorski"
 gladiator_outcome_tooltip: "[SCOPE.sC('actor').GetRuler.GetName] zyska popularności @popularity_icon! bazującej na wyniku walki.\nZwycięzca walki zostanie #Y uwolniony#! z więzienia."
 gladiatorial_debut_select_title: "Wybierz przeciwnika"
 republic_reward_veterans: "Nagródź weteranów"
 republic_reward_veterans_act: "Wypłać pieniądze weteranom lojalnym wobec $CHAR$"
 republic_reward_veterans_act_past: "Kraj $COUNTRY$ wypłacił pieniądze weteranom lojalnym wobec $CHAR$"
 republic_reward_veterans_past: "Wypłacono pieniądze weteranom lojalnym wobec $CHAR$"
 unit_is_bought_off_tooltip: "Maks. #Y 4#! kohorty lub #Y 4#! weteranów lojalnych wobec [target.GetName] straci osobistą lojalność lub zniknie, #R zmniejszając#! #Y siłę bazową#!@power_base! tej postaci."
 REWARDED_VETERANS_RECENTLY: "@trigger_no! Niedawno wypłacono pieniądze weteranom lojalnym wobec [SCOPE.sChar('target').GetName] i do tego czasu nie będziemy w stanie przekonać innych do [SCOPE.sChar('target').GetVariableExpiry('republic_reward_veterans_cooldown')|Y]\n"
 has_loyal_cohorts_or_veterans_tt: "Musi mieć co najmniej 1 #Y lojalnego weterana#! lub #Y lojalną kohortę#!."
 merc_buyoff: "Przekup najemników"
 merc_buyoff_act: "Spróbuj przekupić $CHAR$"
 merc_buyoff_past: "Podjęto próbę przekupienia $CHAR$"
 merc_buyoff_act_past: "Podjęto próbę przekupienia $CHAR$"
 merc_buyoff_effect_tooltip: "[SCOPE.sChar('target').GetName] otrzyma od nas ofertę. Jeśli ich obecny zleceniodawca nie przebije naszej oferty, najemnicy przejdą na naszą stronę!"
 merc_buyoff_effect_tooltip_sg: "[SCOPE.GetRootScope.GetCharacter.GetName] otrzyma od nas ofertę. Jeśli ich obecny zleceniodawca nie przebije naszej oferty, najemnicy przejdą na naszą stronę!"
 merc_joined_us_tt: "[SCOPE.sChar('target').GetName] dołączył do nas wraz ze swoją grupą najemników!"
 merc_employed_tt: "[target.GetName] jest zatrudniony przez kraj."
 eligible_merc_buyoff_tt: "Jednostka najemników nie jest w walce."
 warfare.3.t: "Lepsza oferta"
 warfare.3.desc: "Zatrudnieni przez nas najemnicy, dowodzeni przez [SCOPE.sChar('target').GetName], zwrócili się do nas, twierdząc, że [Select_CString(actor.IsFemale, 'nikczemna', 'nikczemny' )] [SCOPE.sC('actor').GetName] [Select_CString(actor.IsFemale, 'zaoferowała', 'zaoferował' )] im pokaźną sumę za przejście na [SCOPE.sChar('actor').GetSheHe] stronę.\n\nPrzebiegle dali nam szansę na przebicie oferty, mając nadzieję, że skorzystają podwójnie na tej podstępnej transakcji."
 warfare.3.a: "Bardzo dobrze..."
 warfare.3.b: "Nigdy!"
 warfare.4.t: "Oferta odrzucona"
 warfare.4.desc: "Oddział najemników dowodzony przez [SCOPE.sChar('target').GetName] bezdusznie odrzucił naszą ofertę lepszego zatrudnienia!\n\nWygląda na to, że otrzymali lepszą ofertę od łotrów z [SCOPE.sChar('target').GetEmployer.GetAdjective]."
 warfare.4.a: "Szlag!"
 warfare.5.t: "Próba przekupienia najemników zakończona powodzeniem!"
 warfare.5.desc: "Oddział najemników dowodzony przez [SCOPE.sChar('target').GetName], przyjął naszą życzliwą ofertę zatrudnienia. Łotry z [SCOPE.sC('counter_target').GetName] nie były w stanie przebić naszej szczodrej oferty."
 warfare.5.a: "Ich strata!"
 merc_1_year_buyoff_tt: "Nie możesz przekupić najemników częściej niż raz w roku."
 create_mercenary_may_return_some_day_tt: "[SCOPE.sChar('target').GetName] opuści @[actor.GetFlag]! [actor.GetName], aby zostać najemnikiem. Wróci, kiedy stwierdzi, że [Select_CString(target.IsFemale, 'nauczyła', 'nauczył' )] się już wszystkiego."
 create_mercenary: "Wyślij na przygodę"
 create_mercenary_act: "Wyślij $CHAR$ na przygodę w obcych krajach"
 create_mercenary_past: "Wysłano $CHAR$ na przygodę w obcych krajach"
 create_mercenary_act_past: "Wysłano $CHAR$ na przygodę w obcych krajach"
 estimated_chance_to_assassinate_tooltip_monarchy: "Szansa na powodzenie #R maleje#! wraz ze wzrostem umiejętności @military_icon! #Y dowódcy straży#! [target.GetEmployer.GetAdjective]. (Umiejętność ta wynosi obecnie [SCOPE.ScriptValue('get_master_of_guard_martial_svalue')|0Y])."
 estimated_chance_to_assassinate_tooltip_tribal: "Szansa na powodzenie #R maleje#! wraz ze wzrostem umiejętności @military_icon! #Y strażnika przybocznego#! [target.GetEmployer.GetAdjective]. (Umiejętność ta wynosi obecnie [SCOPE.ScriptValue('get_master_of_guard_martial_svalue')|0Y])."
 grant_holding: "Przyznaj posiadłość"
 grant_holding_act: "Przyznaj posiadłość $CHAR$"
 grant_holding_past: "Przyznano posiadłość $CHAR$"
 grant_holding_act_past: "Kraj $COUNTRY$ przyznał posiadłość $CHAR$"
 grant_holding_effect_tooltip: "Rodzinie '[target.GetFamily.GetName|Y]' zostanie przyznana wybrana przez nas posiadłość."
 grant_holding_select_title: "Wybierz posiadłość"
 office_trial: "Postaw przed sądem"
 office_trial_act: "Spróbuj aresztować $CHAR$"
 office_trial_past: "Podjęto próbę zwolnienia z urzędu i aresztowania postaci $CHAR$"
 office_trial_act_past: "W kraju $COUNTRY$ podjęto próbę zwolnienia z urzędu i aresztowania postaci $CHAR$"
 office_trial_success_chance: "Obecnie masz [SCOPE.sChar('target').Custom('get_trial_success_chance_summary')] szansę na powodzenie. (#Y [SCOPE.ScriptValue('get_trial_success_chance')|/0]%#!)"
 office_trial_success_chance_echain: "Obecnie masz [SCOPE.sChar('target').Custom('get_trial_success_chance_summary_echain')] szansę na powodzenie. [SCOPE.ScriptValue('get_trial_success_chance')]"
 office_trial_success_can_improve: "Wybory dokonane podczas procesu wpłyną na ostateczną szansę.\n\n"
 chance_below_20: "#R bardzo niską#!"
 chance_20_40: "#R niską#!"
 chance_40_60: "#Y średnią#!"
 chance_60_80: "#G wysoką#!"
 chance_above_80: "#G bardzo wysoką#!"
 chances_reduced_by: "Szansa jest #R zmniejszana#! przez [SCOPE.sChar('target').GetHerHis] siłę bazową@power_base! (#R [SCOPE.ScriptValue('get_trial_powerbase')|/0]#!)"
 chances_increased_by: "Szansa jest #G zwiększana#! przez [SCOPE.sChar('target').GetHerHis] korupcję @corruption_icon! (#G [SCOPE.ScriptValue('get_trial_corruption')|/0]#!)"
 easier_to_prosecute_tt: "Brak prawa do odwołania: #Y [SCOPE.sChar('target').GetName]#! nie ma naszej #Y kultury podstawowej#!, zwiększając szansę na wyrok.\n\n"
 pick_influence_ambition: "Plan: Wpływ"
 pick_influence_ambition_act: "$CHAR$ zacznie tworzyć wpływy polityczne"
 pick_influence_ambition_past: "Postać $CHAR$ rozpoczęła tworzenie wpływów politycznych."
 pick_influence_ambition_act_past: "Postać $CHAR$ rozpoczęła tworzenie wpływów politycznych"
 pick_influence_ambition_select_title: "$pick_influence_ambition$"
 auto_influence_toggle: "Włącz automatyczne wywieranie wpływu"
 auto_influence_toggle_act: "$CHAR$ będzie automatycznie wywierać wpływ na wybrany cel."
 auto_influence_toggle_past: "Zezwolono $CHAR$ na automatyczne wywieranie wpływu na wybrany cel."
 auto_influence_toggle_act_past: "Zezwolono $CHAR$ na automatyczne wywieranie wpływu na wybrany cel."
 influence_potential_rewards_tt: "[target.GetName] będzie tracić #R -0.1#! popularności @popularity_icon! każdego miesiąca."
 until_scheme_ends_tt: "Do czasu zakończenia planu:"
 scheme_ruler_invest_has_tt: "Ma aktywną ambicję \"Wyprowadź fundusze\"."
 scheme_ruler_invest_potential_rewards_tt: "[target.GetName] zyska #G 10#! @gold! i #R 0.05#! @corruption_icon! każdego miesiąca aż do czasu zakończenia planu."
 ruler_invest_ambition: "Plan: Wyprowadź fundusze"
 ruler_invest_ambition_act: "$CHAR$ wyprowadzi fundusze ze skarbu państwa do własnej kieszeni"
 ruler_invest_ambition_past: "Postać $CHAR$ wyprowadziła fundusze ze skarbu państwa"
 ruler_invest_ambition_act_past: "Postać $CHAR$ rozpoczęła wyprowadzanie funduszy ze skarbu państwa"
 legitimacy_ambition_effect_tt: "[target.GetName] będzie tracić #R -4#! @gold! każdego miesiąca aż do zakończenia planu, kiedy to zyska #Y 5#! legitymizacji @legitimacy!"
 legitimacy_bloodline_tt: "[target.GetPraenomen] może również zyskać cechę greckiego #Y rodowodu#!"
 prove_legitimacy: "Plan: Udowodnij legitymizację"
 prove_legitimacy_act: "$CHAR$ zacznie zgłębiać pochodzenie swojego rodowodu"
 prove_legitimacy_act_past: "Postać $CHAR$ zaczęła zgłębiać pochodzenie swojego rodowodu"
 prove_legitimacy_past: "Postać $CHAR$ zaczęła zgłębiać pochodzenie swojego rodowodu"
 gain_random_diadochi_bloodline_trait: "Znajdź powiązanie z greckim #Y rodowodem#!!"
 gained_diadochi_bloodline_trait: "[SCOPE.GetRootScope.GetCharacter.GetName] i zyskał(a) cechę #Y rodowód#!."
 gained_diadochi_bloodline_trait_children: "[SCOPE.GetRootScope.GetCharacter.GetName] i [SCOPE.GetRootScope.GetCharacter.GetHerHis] potomstwo zyskuje cechę #Y rodowód#!."
 hold_games_scheme: "Plan: Ufunduj igrzyska"
 hold_games_scheme_act: "Ufunduj igrzyska"
 hold_games_scheme_past: "Ufundowano igrzyska"
 hold_games_scheme_act_past: "Ufundowano igrzyska"
 hold_games_scheme_ci_tooltip: "Podczas trwania tego planu [SCOPE.sChar('target').GetName] utraci #R 5#! @gold! i zyska #Y 0.5#! @popularity_icon! każdego miesiąca, a wybrane w tym celu terytorium otrzyma #G +10%#! zadowolenia lokalnej ludności."
 recent_trial_cannot_tt: "@trigger_no! Nie możesz zorganizować kolejnego procesu do [SCOPE.sChar('target').GetVariableExpiry('recent_trial_cooldown_var')|Y]"
 governor_grant_nickname: "Nadaj regionalny kognomen"
 governor_grant_nickname_act: "Nadaj kognomen"
 governor_grant_nickname_past: "Nadano kognomen"
 governor_grant_nickname_act_past: "Nadano kognomen"
 impose_corruption_sanctions: "Nałóż sankcje"
 impose_corruption_sanctions_act: "Nałóż sankcje za korupcję na $CHAR$"
 impose_corruption_sanctions_past: "Nałożono sankcje za korupcję na $CHAR$"
 impose_corruption_sanctions_act_past: "Nałożono sankcje za korupcję na $CHAR$"
 impose_corruption_sanctions_tt_1: "[target.GetName] straci [SCOPE.ScriptValue('impose_fine_corruption_svalue')|G0] korupcji @corruption_icon! i #R 20#! lojalności@loyalty_icon! na okres #Y 60 miesięcy#!"
 impose_corruption_sanctions_tt_2: "[target.GetName] straci [SCOPE.ScriptValue('impose_fine_corruption_svalue')|G0] korupcji @corruption_icon!"
 royal_marriage.6.t: "[ROOT.GetCountry.Custom('proposal_type')]"
 got_indecent_proposal: "Nieoczekiwana propozycja"
 got_decent_proposal: "Dobrana para"
 random_marriage_proposal_1: "[Select_CString(suitor.IsFemale, 'Pełna', 'Pełen' )] podniecenia, [SCOPE.sChar('suitor').GetPraenomen] [Select_CString(suitor.IsFemale, 'wezwała', 'wezwał' )] swoją pomoc domową. Po zbyt długiej samotności, [Select_CString(suitor.IsFemale, 'postanowiła', 'postanowił' )] przedstawić ofertę małżeństwa osobie będącej [SCOPE.sChar('love_target').Custom('get_beautifulness')][Select_CString(love_target.IsFemale, 'ą', 'ym' )] [SCOPE.sChar('love_target').Custom('get_age_adjective')] o imieniu [SCOPE.sChar('love_target').GetPraenomen], [Select_CString(love_target.IsFemale, 'pochodzącej', 'pochodzącemu' )] z dynastii [SCOPE.sChar('love_target').GetFamilyDisplayAdjective]."
 random_marriage_proposal_2: "Po dokładnych rozważaniach, ocenie potencjalnych małżonków i wielu badaniach dotyczących różnych rodów i spuścizn, [SCOPE.sChar('suitor').GetPraenomen] wezwał swoich pomocników i zaproponował ofertę małżeństwa [SCOPE.sChar('love_target').GetPraenomen] z dynastii [SCOPE.sChar('love_target').GetFamilyDisplayAdjective]."
 random_marriage_proposal_3: "[SCOPE.sChar('suitor').GetPraenomen] od dawna [Select_CString(suitor.IsFemale, 'cieszyła', 'cieszył' )] się życiem pełnym beztroski, jednakże tego samego ranka [Select_CString(suitor.IsFemale, 'wezwała', 'wezwał' )] wysłannika, by przedstawić propozycję małżeństwa [SCOPE.sChar('love_target').Custom('get_beautifulness')][Select_CString(love_target.IsFemale, 'ej', 'emu' )] [SCOPE.sChar('love_target').GetPraenomen], [Select_CString(love_target.IsFemale, 'będącej', 'będącemu' )] [SCOPE.sChar('love_target').Custom('get_age_adjective')], w nadziei na spłodzenie spadkobierców w celu dalszej legitymizacji dynastii [SCOPE.sChar('suitor').GetFamilyDisplayAdjective]."
 hof_disapproves_loyalty_desc: "\n\nNiestety, wysłannik donosi, że głowa dynastii [SCOPE.sChar('love_target').GetFamilyDisplayAdjective], [SCOPE.sChar('negotiator').GetName], stanowczo krytykuje nasze rządy i wyraźnie twierdzi, że w żadnym wypadku nie pozwoli na ten związek.\n\nPodejrzewamy, że być może po prostu chce podnieść cenę negocjacyjną, chociaż będziemy musieli zaoferować znacznie więcej, niż się spodziewaliśmy, jeśli chcemy zdobyć serce [SCOPE.sChar('love_target').Custom('get_beautifulness')][Select_CString(target.IsFemale, 'ej', 'ego' )] [SCOPE.sChar('love_target').GetPraenomen]."
 hof_disapproves_age_desc: "\n\nZ żalem nasz wysłannik przynosi wieści, że głowa rodu [SCOPE.sChar('love_target').GetFamilyDisplayAdjective], [SCOPE.sChar('negotiator').GetName], [Select_CString(love_target.IsFemale, 'wkroczyła', 'wkroczył' )], by poruszyć problemy związane z tą propozycją, powołując się na wielką różnicę wieku między [SCOPE.sChar('suitor').GetPraenomen] a [SCOPE.sChar('love_target').Custom('get_age_adjective')], [SCOPE.sChar('love_target').GetPraenomen].\n\nWyraźnie, próbuje [SCOPE.sChar('negotiator').GetSheHe] wyciągnąć z nas tylko większy posag... być może negocjacje to jedyny sposób na zdobycie miłości [SCOPE.sChar('suitor').GetPraenomen]."
 self_disapproves_loyalty_desc: "\n\nWysłannik, który dostarczył propozycję informuje, że ledwo udało mu się ujść z życiem po tym, jak [SCOPE.sChar('love_target').GetPraenomen] [Select_CString(love_target.IsFemale, 'wpadła', 'wpadł' )] w wielką furię, rzucając [ROOT.GetCountry.Custom('get_arena_death_implement_glad')] z wielką dokładnością i prawie go ścinając. Wygląda na to, że [SCOPE.sChar('love_target').GetPraenomen] z wielką pogardą rozważa naszą propozycję. Może być konieczne jest uatrakcyjnienie umowy przez zwiększenie wielkości posagu."
 self_disapproves_age_desc: "\n\nWysłannik informuje, że propozycja ta, choć pochlebna, wzbudziła wielkie rozbawienie [SCOPE.sChar('love_target').GetPraenomen] i [SCOPE.sChar('love_target').GetHerHis] towarzyszy, którzy nie starali się ukryć pogardy wobec zaawansowanego w jakim jest [SCOPE.sChar('suitor').GetPraenomen].\n\nByć może będziemy musieli rozważyć zaoferowanie znacznego posagu, jeśli [SCOPE.sChar('suitor').GetPraenomen] ma odnaleźć miłość w osobie o tak zaawansowanym wieku i doświadczeniu."
 self_approves_desc: "\n\nWysłannik informuje, że [SCOPE.sChar('love_target').GetPraenomen], [Select_CString(love_target.IsFemale, 'będąca', 'będący' )] [SCOPE.sChar('love_target').Custom('get_age_adjective')] prawie [Select_CString(love_target.IsFemale, 'omdlała', 'omdlał' )] po otrzymaniu wiadomości. Może to oznaczać, że [SCOPE.sChar('suitor').GetPraenomen] i [SCOPE.sChar('love_target').GetPraenomen] są idealną parą."
 hof_approves_desc: "\n\nPomimo wyglądu jaki ma [SCOPE.sChar('negotiator').GetPraenomen], wygląda na to, że wszystkie obawy jakie miała głowa rodziny, [SCOPE.sChar('negotiator').GetFamilyDisplayAdjective], zostały rozwiązane przez [SCOPE.sChar('suitor').Custom('love_object')], które [SCOPE.sChar('suitor').GetPraenomen] [Select_CString(suitor.IsFemale, 'zaoferowała', 'zaoferował' )] w celu wsparcia swojej propozycji."
 get_maiden_nn: "młodą dziewczyną"
 get_master_nn: "młodym panem"
 get_woman_nn: "młodą kobietą"
 get_man_nn: "młodym mężczyzną"
 get_woman_of_age_nn: "starszą kobietą"
 get_gentleman_nn: "starszym panem"
 get_beautifulness_beautiful: "piękn"
 get_beautifulness_pulchritudinous: "urodziw"
 get_beautifulness_stunning: "oszałamiając"
 get_beautifulness_fabulous: "fantastyczn"
 get_beautifulness_hideously_maimed: "paskudnie okaleczon"
 get_beautifulness_leprous: "trędowat"
 get_beautifulness_charmless: "nieurodziw"
 get_beautifulness_pious: "pobożn"
 get_beautifulness_fair: "sprawiedliw"
 get_beautifulness_charming: "urocz"
 get_beautifulness_splendid: "wspaniał"
 get_beautifulness_attractive: "atrakcyjn"
 get_beautifulness_expert_martial: "muskularn"
 got_poetry: "pięknie napisany wiersze miłosne"
 got_flowers: "liczne dekoracje kwiatowe"
 got_mournful_wailings: "żałobne zawodzenie w tle"
 got_splendid_gifts: "wspaniałe prezenty"
 got_fine_clothes: "ładne ubrania"
 got_wondrous_garments: "cudowne ubrania"
 got_offers_of_friendship: "obietnice wiecznej wierności"
 disloyalty_exclusive_marriage: "Ta opcja jest dostępna #Y tylko#! dlatego, ponieważ strona negocjująca jest nielojalna."
 unable_to_propose_to_for_5_years: "Nie będzie można zaoferować mariażu postaci #Y [SCOPE.sChar('love_target').GetPraenomen]#! przez następne #Y 5#! lat."
 royal_marriage.6.a: "Wspaniale! Zorganizujmy uroczystości!"
 royal_marriage.6.b: "Sprytnie. Mamy trochę złota do wydania."
 royal_marriage.6.c: "Twarde warunki, ale warte każdego grosza."
 royal_marriage.6.d: "Będziemy musieli szukać miłości gdzie indziej..."
 sell_into_slavery: "Sprzedaj w niewolę"
 sell_into_slavery_act: "Sprzedaj $CHAR$ w niewolę"
 sell_into_slavery_act_past: "Sprzedano $CHAR$ w niewolę"
 sell_into_slavery_past: "Sprzedano $CHAR$ w niewolę"
 based_on_stats_slave: "[actor.GetName] zyska [SCOPE.ScriptValue('sell_slavery_income')|2G] @gold! z racji umiejętności postaci [target.GetPraenomen]"
 sold_every_family_member_tt: "Każdy inny członek rodziny '[target.GetFamily.GetName|Y]' ([SCOPE.ScriptValue('sell_into_slavery_count_svalue')|Y0]) straci #R 10#! lojalności@loyalty_icon!"
 sold_every_family_head_tt: "Każdy inny członek rodziny '[target.GetFamily.GetName|Y]' ([SCOPE.ScriptValue('sell_into_slavery_count_svalue')|Y0]) straci #R 30#! lojalności@loyalty_icon!na okres #Y 120 miesięcy#!"
 slavery_sell_tt: "[target.GetName] #R zniknie#! na zawsze."
 dislikes_selling_family_slavery_tt: "Wielka rodzina okryta hańbą:"
 revoke_holding: "Odbierz posiadłość"
 revoke_holding_past: "Odebrano posiadłość"
 revoke_holding_act: "$CHAR$ odbierze rodzinną posiadłość"
 revoke_holding_act_past: "Odebrano posiadłość"
 revoke_holding_effect_tooltip: "Odbierz posiadłość, która nie jest własnością rodziny"
 revoke_holding_select_title: "Wybierz posiadłość do odebrania:"
 orator_bribe_character: "Przekonaj"
 orator_bribe_character_past: "Postać przekonana!"
 orator_bribe_character_act: "Przekonaj $CHAR$ do stania się bardziej lojalnym"
 orator_bribe_character_act_past: "Kraj $COUNTRY$ przekonał $CHAR$ do stania się znacznie bardziej lojalnym."
 orator_bribe_reason: "Zastępuje to opcję #Y przekupstwa#!, ponieważ twój władca posiada cechę #Y orator#! lub #Y elokwencja#!.\n\n"
 ostracize_effect_tt: "[SCOPE.sChar('target').GetName|Y] zostanie [Select_CString(target.IsFemale, 'wygnana', 'wygnany' )] do losowego pobliskiego kraju, który straci #R 25#! opinii o nas."
 ostracize_char: "Skaż na ostracyzm"
 ostracize_char_past: "Postać skazana na ostracyzm!"
 ostracize_char_act: "Skaż na ostracyzm: $CHAR$"
 ostracize_char_act_past: "Kraj $COUNTRY$ skazał na ostracyzm $CHAR$!"
 due_to_half_power_base: "#R Koszt tyranii#! jest równy połowie siły bazowej celu.\n\n"
 FROM_TYRANNY_PARTY_OSTRA: "Kraj: Od tyranii"
 ostracize_char_impact: "Ostracyzm"
 mg_ostra: "Pogłoski o ostracyzmie"
 mg_ostra_oops: "Skazano na ostracyzm członka rodziny królewskiej"
 OSTRACISM_RECENTLY_HELD: "Kraj [SCOPE.sCountry('actor').GetName|Y] niedawno skazał postać na ostracyzm i nie może skazać kolejnej do [SCOPE.sCountry('actor').GetVariableExpiry('ostracism_recently_held')|Y].\n"
 ostracize_tt: "[actor.GetName] straci #R 5#! stabilności @stability! i [SCOPE.ScriptValue('ostracize_tyranny_svalue')|R0] tyranii @tyranny!"
 mg_syracuse_merc_recruit: "Wybierz nowego przywódcę"
 mg_syracuse_merc_recruit_past: "Wybrano nowego przywódcę"
 mg_syracuse_merc_recruit_act: "Wybierz $CHAR$ na nowego przywódcę"
 mg_syracuse_merc_recruit_act_past: "Wybrano nowego przywódcę"
 must_have_adjacent_disloyal_state: "Przynajmniej jedna prowincja rządzona przez tego gubernatora, przylegająca do naszej granicy musi mieć mniej niż #Y 50#! lojalności prowincji."
 marriage_internal_scheme_tt: "[target.GetName] nie próbuje już zaaranżować mariażu politycznego."
 seek_spouse_interaction: "Plan: Znajdź współmałżonka"
 seek_spouse_interaction_act: "Wżeń postać $CHAR$ w wielką rodzinę"
 seek_spouse_interaction_past: "Zaaranżowano mariaż polityczny"
 seek_spouse_interaction_act_past: "Zaaranżowano mariaż polityczny"
 marriage_internal_unmarried_tt: "[target.GetName] nie może być [Select_CString(target.IsFemale, 'zamężna', 'żonaty' )]."
 scheme_seek_a_spouse_tooltip: "Odpowiedni współmałżonek dla [target.GetName] zostanie znaleziony spośród rozszerzonych relacji wybranej #Y rodziny#!. #Y Głowa rodziny#! może stawiać żądania lub #R odrzucić#! prośbę.\n[target.GetName] będzie tracić #R -2.5#! @gold! każdego miesiąca aż do zakończenia planu."
 seek_spouse_interaction_select_title: "Wybierz głowę rodziny, aby złożyć propozycję:"
 scheme.21.t: "Nowy mariaż polityczny?"
 not_state_culture: "[target.GetName] nie ma naszej #Y kultury podstawowej#!.\nAby [target.GetHerHim] zaadoptować, musimy uchwalić decyzję kulturową #Y Złagodzenie ograniczeń dotyczących obywatelstwa#! dla kultury [target.GetEmployer.GetPrimaryCulture.GetName]."
 BRIBE_RULERWEALTH_TT: "[SCOPE.sCountry('actor').GetRuler.GetName|Y] musi mieć #Y 100#! @gold! w swoim majątku osobistym."
 PROVE_LEGITIMACY_RULERWEALTH_TT: "[SCOPE.sCountry('actor').GetRuler.GetName|Y] musi mieć #Y 300#! @gold! w swoim majątku osobistym."
 SEEK_TREATMENT_RULERWEALTH_TT: "[SCOPE.sCountry('actor').GetRuler.GetName|Y] musi mieć #Y 200#! @gold! w swoim majątku osobistym."
 GOVERNOR_OR_LEGION_COMMANDER_TT: ""
 char_espionage: ""
 char_espionage_act: "Wyślij $CHAR$ w celu próby uzyskania dostępu do szczegółowych informacji na temat docelowego państwa"
 char_espionage_past: "Wysłano $CHAR$ na misję szpiegowską."
 char_espionage_act_past: "Wysłano $CHAR$ na misję szpiegowską."
 char_espionage_select_title: "Wybierz cel szpiegowania"
 char_espionage_return: "Wycofaj ze szpiegowania"
 char_espionage_return_act: ""
 char_espionage_return_past: ""
 char_espionage_return_act_past: ""
 get_ambition_blank: ""
 get_ambition_old: "porzuci swoją ambicję '[ROOT.GetCharacter.GetAmbitionName|Y]' i "
 loyalty_pretender_support_ci: "Zagraniczne wsparcie dla pretendenta"
 pretender_support_ci_tt: "Jeśli ten pretendent zaangażuje się w wojnę domową, zostaniemy poproszeni o udział w ich walce."
 warfare.12.t: ""
 warfare.12.desc: ""
 warfare.12.a: ""
 warfare.12.b: ""
 warfare.12.c: ""
 SHOW_THEIR_CHARACTERS: "#T Pokaż postacie w kraju#!"
 support_successor: ""
 support_successor_act: ""
 support_successor_past: ""
 support_successor_act_past: ""
 PRETENDER_TOOLTIP: ""
 RESET_CVIEW: "Zresetuj widok postaci, aby pokazać nasze postacie."
 warfare.12.d: ""
 if_small_enough_subject_tt: ""
 warfare.14.t: ""
 warfare.14.desc: ""
 warfare.14.a: ""
 warfare.14.b: ""
 warfare.15.t: ""
 warfare.15.desc: ""
 warfare.15.b: ""
